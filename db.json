{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/header.png","path":"images/header.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"ab9f640e93890010a2a3bf839d9f7138c52d4fe1","modified":1514039464000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1487410844000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1487410844000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1487410844000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1487410844000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1487410844000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1487410844000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1487410844000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1487410844000},{"_id":"themes/next/_config.yml","hash":"507a270948985c52f46385abdb8562039ca2b30e","modified":1487410844000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1487410844000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1487410844000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1487410844000},{"_id":"source/_posts/.DS_Store","hash":"f7fbbdc50bf450638f809febe7a33a17ccbc1431","modified":1514040282000},{"_id":"source/_posts/100行代码的约束解决方案.md","hash":"669889b57caa16f4f8d6b6fdabe4561900ca6373","modified":1514040353000},{"_id":"source/_posts/DragDrop.md","hash":"f19353ff445995b0b2a4d2a4e108852445569328","modified":1498834993000},{"_id":"source/_posts/ITMS-90171.md","hash":"ed3da08f3218ac494ad4389c0c23046f687247da","modified":1488532353000},{"_id":"source/_posts/iOS转屏的坑和一些使用技巧.md","hash":"7e028d7c1e4b4ab20a72078355aa0cfb50a8d204","modified":1502290223000},{"_id":"source/_posts/笔记和开发技巧-一.md","hash":"22785bb7e93f151bae0740957ada11ac7f4d8fc7","modified":1496718048000},{"_id":"source/_posts/一种强大的布局方案.md","hash":"cd8c79729ffd6acb07afa3b388e49d1e88db135f","modified":1514040446000},{"_id":"source/about/index.md","hash":"fb4acb9bdee55a9f5be64a8dfe9ab2d2b53526be","modified":1487410844000},{"_id":"source/tags/index.md","hash":"652718e28a08859d317fb1dabd46ea1b462a1a1a","modified":1487410844000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1487410844000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1487410844000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1487410844000},{"_id":"themes/next/languages/default.yml","hash":"07a559df8f0d413cceb145a9bb8d6bbf72d93bcf","modified":1487410844000},{"_id":"themes/next/languages/en.yml","hash":"07a559df8f0d413cceb145a9bb8d6bbf72d93bcf","modified":1487410844000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1487410844000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1487410844000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1487410844000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1487410844000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1487410844000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1487410844000},{"_id":"themes/next/languages/ru.yml","hash":"55a75ca62a4fd55af288523f5f65148441b493ab","modified":1487410844000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"9c3ef43d35a3c9bc645e55d05fc1aee92b01bff0","modified":1487410844000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1487410844000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1487410844000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1487410844000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1487410844000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1487410844000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1487410844000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1487410844000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1487410844000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1487410844000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1487410844000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1487410844000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1487410844000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1487410844000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1487410844000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1487410844000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1487410844000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1487410844000},{"_id":"themes/next/layout/_macro/post.swig","hash":"0f67383a3501aa5151d18012cce8a3cab1fc3134","modified":1487410844000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1487410844000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"f6890992abe09d0d00cf355ed47563c88fef62fa","modified":1487410844000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1487410844000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1487410844000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1487410844000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1487410844000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1487410844000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1487410844000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1487410844000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1487410844000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1487410844000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1487410844000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1487410844000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1487410844000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1487410844000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1487410844000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1487410844000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1487410844000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1487410844000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1487410844000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1487410844000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1487410844000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1487410844000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1487410844000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1487410844000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1487410844000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1487410844000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1487410844000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1487410844000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1487410844000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487410844000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487410844000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1487410844000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1487410844000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1487410844000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487410844000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1487410844000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1487410844000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1487410844000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1487410844000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1487410844000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1487410844000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1487410844000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1487410844000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1487410844000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1487410844000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1487410844000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1487410844000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1487410844000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1487410844000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1487410844000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1487410844000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1487410844000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1487410844000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1487410844000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1487410844000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"7633d3ef63e4f79933128fa07cc2ab8713fb6783","modified":1487410844000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1487410844000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1487410844000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1487410844000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1487410844000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1487410844000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1487410844000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1487410844000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1487410844000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1487410844000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1487410844000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1487410844000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1487410844000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1487410844000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1487410844000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1487410844000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1487410844000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1487410844000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1487410844000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1487410844000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1487410844000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1487410844000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1487410844000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1487410844000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1487410844000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"a07d2ba3d0c6be084dd34a85f176765e8fff87f7","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1487410844000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1487410844000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1487410844000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1487410844000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1487410844000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1487410844000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1487410844000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1487410844000},{"_id":"themes/next/source/images/header.png","hash":"9cdbefc6de6efb5dc55fe0a7035cb583662f98c3","modified":1487410844000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1487410844000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1487410844000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1487410844000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1487410844000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1487410844000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1487410844000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1487410844000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1487410844000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1487410844000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1487410844000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1487410844000},{"_id":"public/about/index.html","hash":"ccd314a881a8d7ed732a6a169bd601a16df820bf","modified":1514040565185},{"_id":"public/tags/index.html","hash":"fd1a30efe30aa0e3872e4c04a0dc7251f386fdf7","modified":1514040565185},{"_id":"public/2017/06/06/笔记和开发技巧-一/index.html","hash":"dbea0a490d52e61782db6750e405a39457e12241","modified":1514040565185},{"_id":"public/archives/index.html","hash":"d0a589c68fc2579b520db06eaa4349c544ecef85","modified":1514040565185},{"_id":"public/archives/2017/index.html","hash":"1020a9f180494d1752de405c4c42bb827ef206eb","modified":1514040565185},{"_id":"public/archives/2017/01/index.html","hash":"70c718d67f321df67017490588ab24c36fc2f62e","modified":1514040565186},{"_id":"public/archives/2017/03/index.html","hash":"48cf9c0224d0220bd043af292f7811af1ca01482","modified":1514040565186},{"_id":"public/archives/2017/05/index.html","hash":"64d10ffc5523e5230bd57949c09a8554083e25c8","modified":1514040565186},{"_id":"public/archives/2017/06/index.html","hash":"b9dc08d0cfc96db23b4e0c99276690dbcd05ab90","modified":1514040565186},{"_id":"public/categories/iOS/index.html","hash":"8e863098f88928d7fe5da9cfe18ea7fb0d3f9c7e","modified":1514040565186},{"_id":"public/2017/05/16/一种强大的布局方案/index.html","hash":"54c706a41e02cef7c08c9d64076b2adaaaad27b4","modified":1514040565186},{"_id":"public/2017/03/03/DragDrop/index.html","hash":"d55c1a24aad34f9156de293a848a593d3c149bc0","modified":1514040565186},{"_id":"public/2017/03/03/ITMS-90171/index.html","hash":"fd345965f5cf1bd955f7300c47b377aefdb22d2a","modified":1514040565186},{"_id":"public/2017/03/03/iOS转屏的坑和一些使用技巧/index.html","hash":"ea64af767dee60081abe22dcdfd2254036d45278","modified":1514040565186},{"_id":"public/2017/01/19/100行代码的约束解决方案/index.html","hash":"f3820c424345b9cdb912a8eb23a3b94ebc0e6635","modified":1514040565186},{"_id":"public/index.html","hash":"2eec15e5090130a95b63c157104d9cbcb4f5d2d3","modified":1514040565186},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1514040565193},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514040565194},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514040565194},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514040565194},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514040565194},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514040565194},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514040565194},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514040565194},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514040565194},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514040565194},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514040565194},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514040565194},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514040565194},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514040565194},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514040565195},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514040565195},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514040565195},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514040565195},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514040565195},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514040565195},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514040565195},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514040565195},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514040565195},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514040565195},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1514040565700},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1514040565705},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1514040565710},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1514040565710},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514040565715},{"_id":"public/js/src/algolia-search.js","hash":"7633d3ef63e4f79933128fa07cc2ab8713fb6783","modified":1514040565715},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1514040565716},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514040565716},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1514040565716},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1514040565716},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514040565716},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1514040565716},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514040565716},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514040565716},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1514040565716},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1514040565716},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1514040565716},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1514040565716},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1514040565716},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514040565716},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1514040565716},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514040565716},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1514040565716},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514040565716},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1514040565716},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514040565716},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514040565716},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514040565716},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514040565716},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514040565716},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514040565717},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514040565717},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514040565717},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514040565717},{"_id":"public/css/main.css","hash":"3c60779b75e2b0ac102ad362edb01a7e1bac1612","modified":1514040565717},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514040565717},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514040565717},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514040565717},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514040565717},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514040565717},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514040565717},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1514040565717},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1514040565717},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514040565717},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514040565717},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1514040565717},{"_id":"public/images/header.png","hash":"9cdbefc6de6efb5dc55fe0a7035cb583662f98c3","modified":1514040565722},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1514040565725}],"Category":[{"name":"iOS","_id":"cjbjgns1900036hreotayva8d"}],"Data":[],"Page":[{"title":"about","date":"2017-02-18T08:46:11.000Z","_content":"[GitHub](https://github.com/saucym)\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-02-18 16:46:11\n---\n[GitHub](https://github.com/saucym)\n","updated":"2017-02-18T09:40:44.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjbjgns1500016hre5ly6pwje","content":"<p><a href=\"https://github.com/saucym\" target=\"_blank\" rel=\"external\">GitHub</a></p>\n","excerpt":"","more":"<p><a href=\"https://github.com/saucym\">GitHub</a></p>\n"},{"title":"tags","date":"2017-02-18T08:33:12.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-02-18 16:33:12\n---\n","updated":"2017-02-18T09:40:44.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjbjgns66000f6hreujqpw2fq","content":"","excerpt":"","more":""}],"Post":[{"title":"一行代码的约束解决方案","tages":["iOS","Xcode","NSLayoutConstraint","Layout"],"_content":"众所周知Apple提供的约束接口非常不好用，我们开发的时候基本都是用的第三方开源约束组件(比如Masonry)，虽然iOS9开始Apple已经意识到了这一点做了相应的更新但是他们的接口还是使用比较不方便。当然swift最新的约束写法是要好很多基本赶上Masonry了，然而我们现在大多项目还是不能完全切使用swift，所以objc的约束我们还是要继续用，由于我比较懒，就算swift最新的约束写法也不能满足我，于是我就开始思考有什么办法可以让我们写约束的时候可以非常简单最好一行代码能解决呢。因为我们大多数App已经从iOS9开始支持了，于是我就基于iOS9的UIViewLayoutConstraintCreation封装了一套简单的约束解决方案，所有代码加起来不到200行，非常简单高效，实现日常编码中大多数约束都能通过一行代码实现。走过路过千万不要错过，200行代码你看了不吃亏看了不上当。\n\n首先要一行代码解决那就需要用到可变参数函数并且按约定的顺序填参数实现约束，其次考虑好用我们做iOS开发的对UIEdgeInsets的top, left, bottom, right这个顺序已经非常熟悉了，然后我们再加上宽高，继续加上是否支持safeArea，再加上是否是相等(或者大于等于，或者小于等于)，最后再加上两个比较少用的centerX centerY，这样我们整个函数10个参数就写好了，类似这样- [UIView wykit_constraint:top, left, bottom, right, width, height, supportSafeArea, relation, centerX, centerY, nil];\n当然大多数时候我们只使用前4-6个参数就可以了(记得nil结尾)\n下面上实现代码\n```Objective-C\n//.h\n@interface UIView (WYKit)\n\n/**\n使用可变参数做约束 参数必须严格按这个照顺序给(top left bottom right width height supportSafeArea relation centerX centerY)且必须以nil结尾 没有的用不支持的类型占位(比如NSNull或者@[])。\nsupportSafeArea NSNumber (是否支持safeArea，default NO)\nrelation NSNumber 指定是约束相等还是 default NSLayoutRelationEqual TODO:这个参数暂时未实现\n\n@param top left bottom right width height 这几个参数支持的类型 UIView NSLayoutAnchor NSNumber\n@return 返回约束聚合对象\n*/\n- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION;\n\n@end\n\n//.m\n@implementation UIView (WYKit)\n\n- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION {\nid left = nil;\nid bottom = nil;\nid right = nil;\nid width = nil;\nid height = nil;\nid centerX = nil;\nid centerY = nil;\nBOOL supportSafeArea = NO;\nNSLayoutRelation relation = NSLayoutRelationEqual;\n//1.取出参数\nif (top) {\nva_list args;// 定义一个指向个数可变的参数列表指针；\nva_start(args, top);// 初始化变量刚定义的va_list变量，这个宏的第二个参数是第一个可变参数的前一个参数，是一个固定的参数\ndo{\nleft = va_arg(args, id);\nif (!left) break;\nbottom = va_arg(args, id);\nif (!bottom) break;\nright = va_arg(args, id);\nif (!right) break;\nwidth = va_arg(args, id);\nif (!width) break;\nheight = va_arg(args, id);\nif (!height) break;\nid flagObj = va_arg(args, id);\nif (!flagObj) break;\nif ([flagObj isKindOfClass:NSNumber.class]) {\nsupportSafeArea = [flagObj boolValue];\n}\nid relationObj = va_arg(args, id);\nif (!relationObj) break;\nif ([relationObj isKindOfClass:NSNumber.class]) {\nrelation = [relationObj integerValue];\nNSAssert((relation == 0 || relation == 1 || relation == -1), @\"数据不合法 必须是 NSLayoutRelationEqual NSLayoutRelationGreaterThanOrEqual 或 NSLayoutRelationLessThanOrEqual\");\n}\ncenterX = va_arg(args, id);\nif (!centerX) break;\ncenterY = va_arg(args, id);\nif (!centerY) break;\n} while(0);\nva_end(args);// 清空参数列表，并置参数指针args无效\n}\n\n//2.根据参数设置约束\nself.translatesAutoresizingMaskIntoConstraints = NO;\nUILayoutGuide *(^wykit_getGuide)(UIView *view) = ^(UIView *view) {\nif (@available(iOS 11.0, *)) {\nif (supportSafeArea) block_return view.safeAreaLayoutGuide;\n}\n\nblock_return (UILayoutGuide *)view;\n};\n\nUILayoutGuide *guide = wykit_getGuide(self.superview);\nNSLayoutConstraint *layout = nil;\nWYKitConstraints *constraints = [WYKitConstraints new];\nconstraints.supportSafeArea = supportSafeArea;\nconstraints.relation = relation;\n\n#define wykit_layout_item(x, r) \\\nif ([x isKindOfClass:UIView.class] || [x isKindOfClass:NSNumber.class] || [x isKindOfClass:NSLayoutAnchor.class]) {\\\nNSLayoutAnchor *xAnchor = [self x##Anchor];\\\nNSLayoutAnchor *anchor = ([xAnchor isKindOfClass:NSLayoutDimension.class]) ? nil : [guide x##Anchor];\\\nCGFloat constant = 0;\\\nif ([x isKindOfClass:UIView.class]) {\\\nanchor = [wykit_getGuide(x) x##Anchor];\\\n} else if ([x isKindOfClass:NSNumber.class]) {\\\nconstant = [x floatValue];\\\n} else if ([x isKindOfClass:NSLayoutAnchor.class]) {\\\nanchor = x;\\\n}\\\n\\\nif ([xAnchor isKindOfClass:NSLayoutDimension.class]) {\\\nif ([anchor isKindOfClass:NSLayoutDimension.class]) {\\\nlayout = [(NSLayoutDimension *)xAnchor r##Anchor:(NSLayoutDimension *)anchor constant:constant];\\\n} else {\\\nlayout = [(NSLayoutDimension *)xAnchor r##Constant:constant];\\\n}\\\n} else {\\\nlayout = [xAnchor r##Anchor:anchor constant:constant];\\\n}\\\nlayout.active = YES;\\\n[constraints wykit_set##x:layout];\\\n}\n\n#define wykit_layout_all(r) \\\nwykit_layout_item(top, r);\\\nwykit_layout_item(left, r);\\\nwykit_layout_item(bottom, r);\\\nwykit_layout_item(right, r);\\\nwykit_layout_item(width, r);\\\nwykit_layout_item(height, r);\\\nwykit_layout_item(centerX, r);\\\nwykit_layout_item(centerY, r);\\\n\nif (relation == NSLayoutRelationGreaterThanOrEqual) {\nwykit_layout_all(constraintGreaterThanOrEqualTo);\n} else if (relation == NSLayoutRelationLessThanOrEqual) {\nwykit_layout_all(constraintLessThanOrEqualTo);\n} else {\nwykit_layout_all(constraintEqualTo);\n}\n\nreturn constraints;\n}\n\n@end\n```\n\n这里定义一个对象来保证扩展性，当然你也可以不要这个对象\n```Objective-C\n//.h\n@interface WYKitConstraints : NSObject\n\n@property (nonatomic, readonly) NSLayoutConstraint *top;\n@property (nonatomic, readonly) NSLayoutConstraint *left;\n@property (nonatomic, readonly) NSLayoutConstraint *bottom;\n@property (nonatomic, readonly) NSLayoutConstraint *right;\n@property (nonatomic, readonly) NSLayoutConstraint *width;\n@property (nonatomic, readonly) NSLayoutConstraint *height;\n@property (nonatomic, readonly) NSLayoutConstraint *centerX;\n@property (nonatomic, readonly) NSLayoutConstraint *centerY;\n\n@property (nonatomic, readonly) BOOL supportSafeArea; /**< 是否支持safeArea */\n@property (nonatomic, readonly) NSLayoutRelation relation;/**< default NSLayoutRelationEqual */\n\n- (void)config:(void (^)(WYKitConstraints *make))block; /**< 设置好约束后可以定制一些偏移值 */\n\n@end\n\n//.m\n@interface WYKitConstraints ()\n@property (nonatomic, assign) BOOL supportSafeArea;\n@property (nonatomic, assign) NSLayoutRelation relation;\n@end\n\n@implementation WYKitConstraints : NSObject\n\n- (void)wykit_settop:(NSLayoutConstraint *)top {\n    _top = top;\n}\n\n- (void)wykit_setleft:(NSLayoutConstraint *)left {\n    _left = left;\n}\n\n- (void)wykit_setbottom:(NSLayoutConstraint *)bottom {\n    _bottom = bottom;\n}\n\n- (void)wykit_setright:(NSLayoutConstraint *)right {\n    _right = right;\n}\n\n- (void)wykit_setwidth:(NSLayoutConstraint *)width {\n    _width = width;\n}\n\n- (void)wykit_setheight:(NSLayoutConstraint *)height {\n    _height = height;\n}\n\n- (void)wykit_setcenterX:(NSLayoutConstraint *)centerX {\n    _centerX = centerX;\n}\n\n- (void)wykit_setcenterY:(NSLayoutConstraint *)centerY {\n    _centerY = centerY;\n}\n\n- (void)config:(void (^)(WYKitConstraints *make))block {\n    if (block) block(self);\n}\n\n@end\n```\n\n下面给几个实际项目中的使用例子\n```Objective-C\n//一个view布局参考父视图 离顶部5 左边5 宽180 高50并且后续可能会调整 可以用下面的一行代码简单实现\n_segHeightLayout = [sView wykit_constraint:@5, @5, @0, @[], @180, @50, nil].height;\n\n//还有很多实际使用列子，通过下面这些约束就实现了一个iOS11的大标题导航栏并且加搜索的约束了 效果下面会给出gif\n[self wykit_constraint:@0, @0, @[], @0, @[], @[], nil];\n_segHeightLayout = [sView wykit_constraint:@[], @5, @0, @[], @180, @(kCPASegHeight), nil].height;\n_searchHeightLayout = [searchBar wykit_constraint:@[], @10, sView.topAnchor, @(-10), @[], @(kCPASearchHeight), nil].height;\n_largeTitleHeightLayout = [largeView wykit_constraint:@[], @15, searchBar.topAnchor, @(-15), @[], @(kCPALargeHeight), nil].height;\n[tLabel wykit_constraint:@[], @0, @(-5), @0, nil];\n_titleHeightLayout = [navBar wykit_constraint:@0, @0, rView.topAnchor, @0, @[], @(kCPATitleHeight), @(YES), nil].height;\n```\n\n 以上就是全部实现，欢迎交流讨论\n","source":"_posts/100行代码的约束解决方案.md","raw":"---\ntitle: 一行代码的约束解决方案\ncategories: iOS\ntages: [iOS,Xcode,NSLayoutConstraint,Layout]\n---\n众所周知Apple提供的约束接口非常不好用，我们开发的时候基本都是用的第三方开源约束组件(比如Masonry)，虽然iOS9开始Apple已经意识到了这一点做了相应的更新但是他们的接口还是使用比较不方便。当然swift最新的约束写法是要好很多基本赶上Masonry了，然而我们现在大多项目还是不能完全切使用swift，所以objc的约束我们还是要继续用，由于我比较懒，就算swift最新的约束写法也不能满足我，于是我就开始思考有什么办法可以让我们写约束的时候可以非常简单最好一行代码能解决呢。因为我们大多数App已经从iOS9开始支持了，于是我就基于iOS9的UIViewLayoutConstraintCreation封装了一套简单的约束解决方案，所有代码加起来不到200行，非常简单高效，实现日常编码中大多数约束都能通过一行代码实现。走过路过千万不要错过，200行代码你看了不吃亏看了不上当。\n\n首先要一行代码解决那就需要用到可变参数函数并且按约定的顺序填参数实现约束，其次考虑好用我们做iOS开发的对UIEdgeInsets的top, left, bottom, right这个顺序已经非常熟悉了，然后我们再加上宽高，继续加上是否支持safeArea，再加上是否是相等(或者大于等于，或者小于等于)，最后再加上两个比较少用的centerX centerY，这样我们整个函数10个参数就写好了，类似这样- [UIView wykit_constraint:top, left, bottom, right, width, height, supportSafeArea, relation, centerX, centerY, nil];\n当然大多数时候我们只使用前4-6个参数就可以了(记得nil结尾)\n下面上实现代码\n```Objective-C\n//.h\n@interface UIView (WYKit)\n\n/**\n使用可变参数做约束 参数必须严格按这个照顺序给(top left bottom right width height supportSafeArea relation centerX centerY)且必须以nil结尾 没有的用不支持的类型占位(比如NSNull或者@[])。\nsupportSafeArea NSNumber (是否支持safeArea，default NO)\nrelation NSNumber 指定是约束相等还是 default NSLayoutRelationEqual TODO:这个参数暂时未实现\n\n@param top left bottom right width height 这几个参数支持的类型 UIView NSLayoutAnchor NSNumber\n@return 返回约束聚合对象\n*/\n- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION;\n\n@end\n\n//.m\n@implementation UIView (WYKit)\n\n- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION {\nid left = nil;\nid bottom = nil;\nid right = nil;\nid width = nil;\nid height = nil;\nid centerX = nil;\nid centerY = nil;\nBOOL supportSafeArea = NO;\nNSLayoutRelation relation = NSLayoutRelationEqual;\n//1.取出参数\nif (top) {\nva_list args;// 定义一个指向个数可变的参数列表指针；\nva_start(args, top);// 初始化变量刚定义的va_list变量，这个宏的第二个参数是第一个可变参数的前一个参数，是一个固定的参数\ndo{\nleft = va_arg(args, id);\nif (!left) break;\nbottom = va_arg(args, id);\nif (!bottom) break;\nright = va_arg(args, id);\nif (!right) break;\nwidth = va_arg(args, id);\nif (!width) break;\nheight = va_arg(args, id);\nif (!height) break;\nid flagObj = va_arg(args, id);\nif (!flagObj) break;\nif ([flagObj isKindOfClass:NSNumber.class]) {\nsupportSafeArea = [flagObj boolValue];\n}\nid relationObj = va_arg(args, id);\nif (!relationObj) break;\nif ([relationObj isKindOfClass:NSNumber.class]) {\nrelation = [relationObj integerValue];\nNSAssert((relation == 0 || relation == 1 || relation == -1), @\"数据不合法 必须是 NSLayoutRelationEqual NSLayoutRelationGreaterThanOrEqual 或 NSLayoutRelationLessThanOrEqual\");\n}\ncenterX = va_arg(args, id);\nif (!centerX) break;\ncenterY = va_arg(args, id);\nif (!centerY) break;\n} while(0);\nva_end(args);// 清空参数列表，并置参数指针args无效\n}\n\n//2.根据参数设置约束\nself.translatesAutoresizingMaskIntoConstraints = NO;\nUILayoutGuide *(^wykit_getGuide)(UIView *view) = ^(UIView *view) {\nif (@available(iOS 11.0, *)) {\nif (supportSafeArea) block_return view.safeAreaLayoutGuide;\n}\n\nblock_return (UILayoutGuide *)view;\n};\n\nUILayoutGuide *guide = wykit_getGuide(self.superview);\nNSLayoutConstraint *layout = nil;\nWYKitConstraints *constraints = [WYKitConstraints new];\nconstraints.supportSafeArea = supportSafeArea;\nconstraints.relation = relation;\n\n#define wykit_layout_item(x, r) \\\nif ([x isKindOfClass:UIView.class] || [x isKindOfClass:NSNumber.class] || [x isKindOfClass:NSLayoutAnchor.class]) {\\\nNSLayoutAnchor *xAnchor = [self x##Anchor];\\\nNSLayoutAnchor *anchor = ([xAnchor isKindOfClass:NSLayoutDimension.class]) ? nil : [guide x##Anchor];\\\nCGFloat constant = 0;\\\nif ([x isKindOfClass:UIView.class]) {\\\nanchor = [wykit_getGuide(x) x##Anchor];\\\n} else if ([x isKindOfClass:NSNumber.class]) {\\\nconstant = [x floatValue];\\\n} else if ([x isKindOfClass:NSLayoutAnchor.class]) {\\\nanchor = x;\\\n}\\\n\\\nif ([xAnchor isKindOfClass:NSLayoutDimension.class]) {\\\nif ([anchor isKindOfClass:NSLayoutDimension.class]) {\\\nlayout = [(NSLayoutDimension *)xAnchor r##Anchor:(NSLayoutDimension *)anchor constant:constant];\\\n} else {\\\nlayout = [(NSLayoutDimension *)xAnchor r##Constant:constant];\\\n}\\\n} else {\\\nlayout = [xAnchor r##Anchor:anchor constant:constant];\\\n}\\\nlayout.active = YES;\\\n[constraints wykit_set##x:layout];\\\n}\n\n#define wykit_layout_all(r) \\\nwykit_layout_item(top, r);\\\nwykit_layout_item(left, r);\\\nwykit_layout_item(bottom, r);\\\nwykit_layout_item(right, r);\\\nwykit_layout_item(width, r);\\\nwykit_layout_item(height, r);\\\nwykit_layout_item(centerX, r);\\\nwykit_layout_item(centerY, r);\\\n\nif (relation == NSLayoutRelationGreaterThanOrEqual) {\nwykit_layout_all(constraintGreaterThanOrEqualTo);\n} else if (relation == NSLayoutRelationLessThanOrEqual) {\nwykit_layout_all(constraintLessThanOrEqualTo);\n} else {\nwykit_layout_all(constraintEqualTo);\n}\n\nreturn constraints;\n}\n\n@end\n```\n\n这里定义一个对象来保证扩展性，当然你也可以不要这个对象\n```Objective-C\n//.h\n@interface WYKitConstraints : NSObject\n\n@property (nonatomic, readonly) NSLayoutConstraint *top;\n@property (nonatomic, readonly) NSLayoutConstraint *left;\n@property (nonatomic, readonly) NSLayoutConstraint *bottom;\n@property (nonatomic, readonly) NSLayoutConstraint *right;\n@property (nonatomic, readonly) NSLayoutConstraint *width;\n@property (nonatomic, readonly) NSLayoutConstraint *height;\n@property (nonatomic, readonly) NSLayoutConstraint *centerX;\n@property (nonatomic, readonly) NSLayoutConstraint *centerY;\n\n@property (nonatomic, readonly) BOOL supportSafeArea; /**< 是否支持safeArea */\n@property (nonatomic, readonly) NSLayoutRelation relation;/**< default NSLayoutRelationEqual */\n\n- (void)config:(void (^)(WYKitConstraints *make))block; /**< 设置好约束后可以定制一些偏移值 */\n\n@end\n\n//.m\n@interface WYKitConstraints ()\n@property (nonatomic, assign) BOOL supportSafeArea;\n@property (nonatomic, assign) NSLayoutRelation relation;\n@end\n\n@implementation WYKitConstraints : NSObject\n\n- (void)wykit_settop:(NSLayoutConstraint *)top {\n    _top = top;\n}\n\n- (void)wykit_setleft:(NSLayoutConstraint *)left {\n    _left = left;\n}\n\n- (void)wykit_setbottom:(NSLayoutConstraint *)bottom {\n    _bottom = bottom;\n}\n\n- (void)wykit_setright:(NSLayoutConstraint *)right {\n    _right = right;\n}\n\n- (void)wykit_setwidth:(NSLayoutConstraint *)width {\n    _width = width;\n}\n\n- (void)wykit_setheight:(NSLayoutConstraint *)height {\n    _height = height;\n}\n\n- (void)wykit_setcenterX:(NSLayoutConstraint *)centerX {\n    _centerX = centerX;\n}\n\n- (void)wykit_setcenterY:(NSLayoutConstraint *)centerY {\n    _centerY = centerY;\n}\n\n- (void)config:(void (^)(WYKitConstraints *make))block {\n    if (block) block(self);\n}\n\n@end\n```\n\n下面给几个实际项目中的使用例子\n```Objective-C\n//一个view布局参考父视图 离顶部5 左边5 宽180 高50并且后续可能会调整 可以用下面的一行代码简单实现\n_segHeightLayout = [sView wykit_constraint:@5, @5, @0, @[], @180, @50, nil].height;\n\n//还有很多实际使用列子，通过下面这些约束就实现了一个iOS11的大标题导航栏并且加搜索的约束了 效果下面会给出gif\n[self wykit_constraint:@0, @0, @[], @0, @[], @[], nil];\n_segHeightLayout = [sView wykit_constraint:@[], @5, @0, @[], @180, @(kCPASegHeight), nil].height;\n_searchHeightLayout = [searchBar wykit_constraint:@[], @10, sView.topAnchor, @(-10), @[], @(kCPASearchHeight), nil].height;\n_largeTitleHeightLayout = [largeView wykit_constraint:@[], @15, searchBar.topAnchor, @(-15), @[], @(kCPALargeHeight), nil].height;\n[tLabel wykit_constraint:@[], @0, @(-5), @0, nil];\n_titleHeightLayout = [navBar wykit_constraint:@0, @0, rView.topAnchor, @0, @[], @(kCPATitleHeight), @(YES), nil].height;\n```\n\n 以上就是全部实现，欢迎交流讨论\n","slug":"100行代码的约束解决方案","published":1,"date":"2017-01-19T02:59:18.000Z","updated":"2017-12-23T14:45:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbjgns1200006hre1s3uhc8f","content":"<p>众所周知Apple提供的约束接口非常不好用，我们开发的时候基本都是用的第三方开源约束组件(比如Masonry)，虽然iOS9开始Apple已经意识到了这一点做了相应的更新但是他们的接口还是使用比较不方便。当然swift最新的约束写法是要好很多基本赶上Masonry了，然而我们现在大多项目还是不能完全切使用swift，所以objc的约束我们还是要继续用，由于我比较懒，就算swift最新的约束写法也不能满足我，于是我就开始思考有什么办法可以让我们写约束的时候可以非常简单最好一行代码能解决呢。因为我们大多数App已经从iOS9开始支持了，于是我就基于iOS9的UIViewLayoutConstraintCreation封装了一套简单的约束解决方案，所有代码加起来不到200行，非常简单高效，实现日常编码中大多数约束都能通过一行代码实现。走过路过千万不要错过，200行代码你看了不吃亏看了不上当。</p>\n<p>首先要一行代码解决那就需要用到可变参数函数并且按约定的顺序填参数实现约束，其次考虑好用我们做iOS开发的对UIEdgeInsets的top, left, bottom, right这个顺序已经非常熟悉了，然后我们再加上宽高，继续加上是否支持safeArea，再加上是否是相等(或者大于等于，或者小于等于)，最后再加上两个比较少用的centerX centerY，这样我们整个函数10个参数就写好了，类似这样- [UIView wykit_constraint:top, left, bottom, right, width, height, supportSafeArea, relation, centerX, centerY, nil];<br>当然大多数时候我们只使用前4-6个参数就可以了(记得nil结尾)<br>下面上实现代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div></pre></td><td class=\"code\"><pre><div class=\"line\">//.h</div><div class=\"line\">@interface UIView (WYKit)</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">使用可变参数做约束 参数必须严格按这个照顺序给(top left bottom right width height supportSafeArea relation centerX centerY)且必须以nil结尾 没有的用不支持的类型占位(比如NSNull或者@[])。</div><div class=\"line\">supportSafeArea NSNumber (是否支持safeArea，default NO)</div><div class=\"line\">relation NSNumber 指定是约束相等还是 default NSLayoutRelationEqual TODO:这个参数暂时未实现</div><div class=\"line\"></div><div class=\"line\">@param top left bottom right width height 这几个参数支持的类型 UIView NSLayoutAnchor NSNumber</div><div class=\"line\">@return 返回约束聚合对象</div><div class=\"line\">*/</div><div class=\"line\">- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION;</div><div class=\"line\"></div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">//.m</div><div class=\"line\">@implementation UIView (WYKit)</div><div class=\"line\"></div><div class=\"line\">- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION &#123;</div><div class=\"line\">id left = nil;</div><div class=\"line\">id bottom = nil;</div><div class=\"line\">id right = nil;</div><div class=\"line\">id width = nil;</div><div class=\"line\">id height = nil;</div><div class=\"line\">id centerX = nil;</div><div class=\"line\">id centerY = nil;</div><div class=\"line\">BOOL supportSafeArea = NO;</div><div class=\"line\">NSLayoutRelation relation = NSLayoutRelationEqual;</div><div class=\"line\">//1.取出参数</div><div class=\"line\">if (top) &#123;</div><div class=\"line\">va_list args;// 定义一个指向个数可变的参数列表指针；</div><div class=\"line\">va_start(args, top);// 初始化变量刚定义的va_list变量，这个宏的第二个参数是第一个可变参数的前一个参数，是一个固定的参数</div><div class=\"line\">do&#123;</div><div class=\"line\">left = va_arg(args, id);</div><div class=\"line\">if (!left) break;</div><div class=\"line\">bottom = va_arg(args, id);</div><div class=\"line\">if (!bottom) break;</div><div class=\"line\">right = va_arg(args, id);</div><div class=\"line\">if (!right) break;</div><div class=\"line\">width = va_arg(args, id);</div><div class=\"line\">if (!width) break;</div><div class=\"line\">height = va_arg(args, id);</div><div class=\"line\">if (!height) break;</div><div class=\"line\">id flagObj = va_arg(args, id);</div><div class=\"line\">if (!flagObj) break;</div><div class=\"line\">if ([flagObj isKindOfClass:NSNumber.class]) &#123;</div><div class=\"line\">supportSafeArea = [flagObj boolValue];</div><div class=\"line\">&#125;</div><div class=\"line\">id relationObj = va_arg(args, id);</div><div class=\"line\">if (!relationObj) break;</div><div class=\"line\">if ([relationObj isKindOfClass:NSNumber.class]) &#123;</div><div class=\"line\">relation = [relationObj integerValue];</div><div class=\"line\">NSAssert((relation == 0 || relation == 1 || relation == -1), @&quot;数据不合法 必须是 NSLayoutRelationEqual NSLayoutRelationGreaterThanOrEqual 或 NSLayoutRelationLessThanOrEqual&quot;);</div><div class=\"line\">&#125;</div><div class=\"line\">centerX = va_arg(args, id);</div><div class=\"line\">if (!centerX) break;</div><div class=\"line\">centerY = va_arg(args, id);</div><div class=\"line\">if (!centerY) break;</div><div class=\"line\">&#125; while(0);</div><div class=\"line\">va_end(args);// 清空参数列表，并置参数指针args无效</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//2.根据参数设置约束</div><div class=\"line\">self.translatesAutoresizingMaskIntoConstraints = NO;</div><div class=\"line\">UILayoutGuide *(^wykit_getGuide)(UIView *view) = ^(UIView *view) &#123;</div><div class=\"line\">if (@available(iOS 11.0, *)) &#123;</div><div class=\"line\">if (supportSafeArea) block_return view.safeAreaLayoutGuide;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">block_return (UILayoutGuide *)view;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">UILayoutGuide *guide = wykit_getGuide(self.superview);</div><div class=\"line\">NSLayoutConstraint *layout = nil;</div><div class=\"line\">WYKitConstraints *constraints = [WYKitConstraints new];</div><div class=\"line\">constraints.supportSafeArea = supportSafeArea;</div><div class=\"line\">constraints.relation = relation;</div><div class=\"line\"></div><div class=\"line\">#define wykit_layout_item(x, r) \\</div><div class=\"line\">if ([x isKindOfClass:UIView.class] || [x isKindOfClass:NSNumber.class] || [x isKindOfClass:NSLayoutAnchor.class]) &#123;\\</div><div class=\"line\">NSLayoutAnchor *xAnchor = [self x##Anchor];\\</div><div class=\"line\">NSLayoutAnchor *anchor = ([xAnchor isKindOfClass:NSLayoutDimension.class]) ? nil : [guide x##Anchor];\\</div><div class=\"line\">CGFloat constant = 0;\\</div><div class=\"line\">if ([x isKindOfClass:UIView.class]) &#123;\\</div><div class=\"line\">anchor = [wykit_getGuide(x) x##Anchor];\\</div><div class=\"line\">&#125; else if ([x isKindOfClass:NSNumber.class]) &#123;\\</div><div class=\"line\">constant = [x floatValue];\\</div><div class=\"line\">&#125; else if ([x isKindOfClass:NSLayoutAnchor.class]) &#123;\\</div><div class=\"line\">anchor = x;\\</div><div class=\"line\">&#125;\\</div><div class=\"line\">\\</div><div class=\"line\">if ([xAnchor isKindOfClass:NSLayoutDimension.class]) &#123;\\</div><div class=\"line\">if ([anchor isKindOfClass:NSLayoutDimension.class]) &#123;\\</div><div class=\"line\">layout = [(NSLayoutDimension *)xAnchor r##Anchor:(NSLayoutDimension *)anchor constant:constant];\\</div><div class=\"line\">&#125; else &#123;\\</div><div class=\"line\">layout = [(NSLayoutDimension *)xAnchor r##Constant:constant];\\</div><div class=\"line\">&#125;\\</div><div class=\"line\">&#125; else &#123;\\</div><div class=\"line\">layout = [xAnchor r##Anchor:anchor constant:constant];\\</div><div class=\"line\">&#125;\\</div><div class=\"line\">layout.active = YES;\\</div><div class=\"line\">[constraints wykit_set##x:layout];\\</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#define wykit_layout_all(r) \\</div><div class=\"line\">wykit_layout_item(top, r);\\</div><div class=\"line\">wykit_layout_item(left, r);\\</div><div class=\"line\">wykit_layout_item(bottom, r);\\</div><div class=\"line\">wykit_layout_item(right, r);\\</div><div class=\"line\">wykit_layout_item(width, r);\\</div><div class=\"line\">wykit_layout_item(height, r);\\</div><div class=\"line\">wykit_layout_item(centerX, r);\\</div><div class=\"line\">wykit_layout_item(centerY, r);\\</div><div class=\"line\"></div><div class=\"line\">if (relation == NSLayoutRelationGreaterThanOrEqual) &#123;</div><div class=\"line\">wykit_layout_all(constraintGreaterThanOrEqualTo);</div><div class=\"line\">&#125; else if (relation == NSLayoutRelationLessThanOrEqual) &#123;</div><div class=\"line\">wykit_layout_all(constraintLessThanOrEqualTo);</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">wykit_layout_all(constraintEqualTo);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">return constraints;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>这里定义一个对象来保证扩展性，当然你也可以不要这个对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">//.h</div><div class=\"line\">@interface WYKitConstraints : NSObject</div><div class=\"line\"></div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *top;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *left;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *bottom;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *right;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *width;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *height;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *centerX;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *centerY;</div><div class=\"line\"></div><div class=\"line\">@property (nonatomic, readonly) BOOL supportSafeArea; /**&lt; 是否支持safeArea */</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutRelation relation;/**&lt; default NSLayoutRelationEqual */</div><div class=\"line\"></div><div class=\"line\">- (void)config:(void (^)(WYKitConstraints *make))block; /**&lt; 设置好约束后可以定制一些偏移值 */</div><div class=\"line\"></div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">//.m</div><div class=\"line\">@interface WYKitConstraints ()</div><div class=\"line\">@property (nonatomic, assign) BOOL supportSafeArea;</div><div class=\"line\">@property (nonatomic, assign) NSLayoutRelation relation;</div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">@implementation WYKitConstraints : NSObject</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_settop:(NSLayoutConstraint *)top &#123;</div><div class=\"line\">    _top = top;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setleft:(NSLayoutConstraint *)left &#123;</div><div class=\"line\">    _left = left;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setbottom:(NSLayoutConstraint *)bottom &#123;</div><div class=\"line\">    _bottom = bottom;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setright:(NSLayoutConstraint *)right &#123;</div><div class=\"line\">    _right = right;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setwidth:(NSLayoutConstraint *)width &#123;</div><div class=\"line\">    _width = width;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setheight:(NSLayoutConstraint *)height &#123;</div><div class=\"line\">    _height = height;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setcenterX:(NSLayoutConstraint *)centerX &#123;</div><div class=\"line\">    _centerX = centerX;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setcenterY:(NSLayoutConstraint *)centerY &#123;</div><div class=\"line\">    _centerY = centerY;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)config:(void (^)(WYKitConstraints *make))block &#123;</div><div class=\"line\">    if (block) block(self);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>下面给几个实际项目中的使用例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//一个view布局参考父视图 离顶部5 左边5 宽180 高50并且后续可能会调整 可以用下面的一行代码简单实现</div><div class=\"line\">_segHeightLayout = [sView wykit_constraint:@5, @5, @0, @[], @180, @50, nil].height;</div><div class=\"line\"></div><div class=\"line\">//还有很多实际使用列子，通过下面这些约束就实现了一个iOS11的大标题导航栏并且加搜索的约束了 效果下面会给出gif</div><div class=\"line\">[self wykit_constraint:@0, @0, @[], @0, @[], @[], nil];</div><div class=\"line\">_segHeightLayout = [sView wykit_constraint:@[], @5, @0, @[], @180, @(kCPASegHeight), nil].height;</div><div class=\"line\">_searchHeightLayout = [searchBar wykit_constraint:@[], @10, sView.topAnchor, @(-10), @[], @(kCPASearchHeight), nil].height;</div><div class=\"line\">_largeTitleHeightLayout = [largeView wykit_constraint:@[], @15, searchBar.topAnchor, @(-15), @[], @(kCPALargeHeight), nil].height;</div><div class=\"line\">[tLabel wykit_constraint:@[], @0, @(-5), @0, nil];</div><div class=\"line\">_titleHeightLayout = [navBar wykit_constraint:@0, @0, rView.topAnchor, @0, @[], @(kCPATitleHeight), @(YES), nil].height;</div></pre></td></tr></table></figure></p>\n<p> 以上就是全部实现，欢迎交流讨论</p>\n","excerpt":"","more":"<p>众所周知Apple提供的约束接口非常不好用，我们开发的时候基本都是用的第三方开源约束组件(比如Masonry)，虽然iOS9开始Apple已经意识到了这一点做了相应的更新但是他们的接口还是使用比较不方便。当然swift最新的约束写法是要好很多基本赶上Masonry了，然而我们现在大多项目还是不能完全切使用swift，所以objc的约束我们还是要继续用，由于我比较懒，就算swift最新的约束写法也不能满足我，于是我就开始思考有什么办法可以让我们写约束的时候可以非常简单最好一行代码能解决呢。因为我们大多数App已经从iOS9开始支持了，于是我就基于iOS9的UIViewLayoutConstraintCreation封装了一套简单的约束解决方案，所有代码加起来不到200行，非常简单高效，实现日常编码中大多数约束都能通过一行代码实现。走过路过千万不要错过，200行代码你看了不吃亏看了不上当。</p>\n<p>首先要一行代码解决那就需要用到可变参数函数并且按约定的顺序填参数实现约束，其次考虑好用我们做iOS开发的对UIEdgeInsets的top, left, bottom, right这个顺序已经非常熟悉了，然后我们再加上宽高，继续加上是否支持safeArea，再加上是否是相等(或者大于等于，或者小于等于)，最后再加上两个比较少用的centerX centerY，这样我们整个函数10个参数就写好了，类似这样- [UIView wykit_constraint:top, left, bottom, right, width, height, supportSafeArea, relation, centerX, centerY, nil];<br>当然大多数时候我们只使用前4-6个参数就可以了(记得nil结尾)<br>下面上实现代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div></pre></td><td class=\"code\"><pre><div class=\"line\">//.h</div><div class=\"line\">@interface UIView (WYKit)</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">使用可变参数做约束 参数必须严格按这个照顺序给(top left bottom right width height supportSafeArea relation centerX centerY)且必须以nil结尾 没有的用不支持的类型占位(比如NSNull或者@[])。</div><div class=\"line\">supportSafeArea NSNumber (是否支持safeArea，default NO)</div><div class=\"line\">relation NSNumber 指定是约束相等还是 default NSLayoutRelationEqual TODO:这个参数暂时未实现</div><div class=\"line\"></div><div class=\"line\">@param top left bottom right width height 这几个参数支持的类型 UIView NSLayoutAnchor NSNumber</div><div class=\"line\">@return 返回约束聚合对象</div><div class=\"line\">*/</div><div class=\"line\">- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION;</div><div class=\"line\"></div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">//.m</div><div class=\"line\">@implementation UIView (WYKit)</div><div class=\"line\"></div><div class=\"line\">- (WYKitConstraints *)wykit_constraint:(id)top, ... NS_REQUIRES_NIL_TERMINATION &#123;</div><div class=\"line\">id left = nil;</div><div class=\"line\">id bottom = nil;</div><div class=\"line\">id right = nil;</div><div class=\"line\">id width = nil;</div><div class=\"line\">id height = nil;</div><div class=\"line\">id centerX = nil;</div><div class=\"line\">id centerY = nil;</div><div class=\"line\">BOOL supportSafeArea = NO;</div><div class=\"line\">NSLayoutRelation relation = NSLayoutRelationEqual;</div><div class=\"line\">//1.取出参数</div><div class=\"line\">if (top) &#123;</div><div class=\"line\">va_list args;// 定义一个指向个数可变的参数列表指针；</div><div class=\"line\">va_start(args, top);// 初始化变量刚定义的va_list变量，这个宏的第二个参数是第一个可变参数的前一个参数，是一个固定的参数</div><div class=\"line\">do&#123;</div><div class=\"line\">left = va_arg(args, id);</div><div class=\"line\">if (!left) break;</div><div class=\"line\">bottom = va_arg(args, id);</div><div class=\"line\">if (!bottom) break;</div><div class=\"line\">right = va_arg(args, id);</div><div class=\"line\">if (!right) break;</div><div class=\"line\">width = va_arg(args, id);</div><div class=\"line\">if (!width) break;</div><div class=\"line\">height = va_arg(args, id);</div><div class=\"line\">if (!height) break;</div><div class=\"line\">id flagObj = va_arg(args, id);</div><div class=\"line\">if (!flagObj) break;</div><div class=\"line\">if ([flagObj isKindOfClass:NSNumber.class]) &#123;</div><div class=\"line\">supportSafeArea = [flagObj boolValue];</div><div class=\"line\">&#125;</div><div class=\"line\">id relationObj = va_arg(args, id);</div><div class=\"line\">if (!relationObj) break;</div><div class=\"line\">if ([relationObj isKindOfClass:NSNumber.class]) &#123;</div><div class=\"line\">relation = [relationObj integerValue];</div><div class=\"line\">NSAssert((relation == 0 || relation == 1 || relation == -1), @&quot;数据不合法 必须是 NSLayoutRelationEqual NSLayoutRelationGreaterThanOrEqual 或 NSLayoutRelationLessThanOrEqual&quot;);</div><div class=\"line\">&#125;</div><div class=\"line\">centerX = va_arg(args, id);</div><div class=\"line\">if (!centerX) break;</div><div class=\"line\">centerY = va_arg(args, id);</div><div class=\"line\">if (!centerY) break;</div><div class=\"line\">&#125; while(0);</div><div class=\"line\">va_end(args);// 清空参数列表，并置参数指针args无效</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//2.根据参数设置约束</div><div class=\"line\">self.translatesAutoresizingMaskIntoConstraints = NO;</div><div class=\"line\">UILayoutGuide *(^wykit_getGuide)(UIView *view) = ^(UIView *view) &#123;</div><div class=\"line\">if (@available(iOS 11.0, *)) &#123;</div><div class=\"line\">if (supportSafeArea) block_return view.safeAreaLayoutGuide;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">block_return (UILayoutGuide *)view;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">UILayoutGuide *guide = wykit_getGuide(self.superview);</div><div class=\"line\">NSLayoutConstraint *layout = nil;</div><div class=\"line\">WYKitConstraints *constraints = [WYKitConstraints new];</div><div class=\"line\">constraints.supportSafeArea = supportSafeArea;</div><div class=\"line\">constraints.relation = relation;</div><div class=\"line\"></div><div class=\"line\">#define wykit_layout_item(x, r) \\</div><div class=\"line\">if ([x isKindOfClass:UIView.class] || [x isKindOfClass:NSNumber.class] || [x isKindOfClass:NSLayoutAnchor.class]) &#123;\\</div><div class=\"line\">NSLayoutAnchor *xAnchor = [self x##Anchor];\\</div><div class=\"line\">NSLayoutAnchor *anchor = ([xAnchor isKindOfClass:NSLayoutDimension.class]) ? nil : [guide x##Anchor];\\</div><div class=\"line\">CGFloat constant = 0;\\</div><div class=\"line\">if ([x isKindOfClass:UIView.class]) &#123;\\</div><div class=\"line\">anchor = [wykit_getGuide(x) x##Anchor];\\</div><div class=\"line\">&#125; else if ([x isKindOfClass:NSNumber.class]) &#123;\\</div><div class=\"line\">constant = [x floatValue];\\</div><div class=\"line\">&#125; else if ([x isKindOfClass:NSLayoutAnchor.class]) &#123;\\</div><div class=\"line\">anchor = x;\\</div><div class=\"line\">&#125;\\</div><div class=\"line\">\\</div><div class=\"line\">if ([xAnchor isKindOfClass:NSLayoutDimension.class]) &#123;\\</div><div class=\"line\">if ([anchor isKindOfClass:NSLayoutDimension.class]) &#123;\\</div><div class=\"line\">layout = [(NSLayoutDimension *)xAnchor r##Anchor:(NSLayoutDimension *)anchor constant:constant];\\</div><div class=\"line\">&#125; else &#123;\\</div><div class=\"line\">layout = [(NSLayoutDimension *)xAnchor r##Constant:constant];\\</div><div class=\"line\">&#125;\\</div><div class=\"line\">&#125; else &#123;\\</div><div class=\"line\">layout = [xAnchor r##Anchor:anchor constant:constant];\\</div><div class=\"line\">&#125;\\</div><div class=\"line\">layout.active = YES;\\</div><div class=\"line\">[constraints wykit_set##x:layout];\\</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#define wykit_layout_all(r) \\</div><div class=\"line\">wykit_layout_item(top, r);\\</div><div class=\"line\">wykit_layout_item(left, r);\\</div><div class=\"line\">wykit_layout_item(bottom, r);\\</div><div class=\"line\">wykit_layout_item(right, r);\\</div><div class=\"line\">wykit_layout_item(width, r);\\</div><div class=\"line\">wykit_layout_item(height, r);\\</div><div class=\"line\">wykit_layout_item(centerX, r);\\</div><div class=\"line\">wykit_layout_item(centerY, r);\\</div><div class=\"line\"></div><div class=\"line\">if (relation == NSLayoutRelationGreaterThanOrEqual) &#123;</div><div class=\"line\">wykit_layout_all(constraintGreaterThanOrEqualTo);</div><div class=\"line\">&#125; else if (relation == NSLayoutRelationLessThanOrEqual) &#123;</div><div class=\"line\">wykit_layout_all(constraintLessThanOrEqualTo);</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">wykit_layout_all(constraintEqualTo);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">return constraints;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>这里定义一个对象来保证扩展性，当然你也可以不要这个对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\">//.h</div><div class=\"line\">@interface WYKitConstraints : NSObject</div><div class=\"line\"></div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *top;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *left;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *bottom;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *right;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *width;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *height;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *centerX;</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutConstraint *centerY;</div><div class=\"line\"></div><div class=\"line\">@property (nonatomic, readonly) BOOL supportSafeArea; /**&lt; 是否支持safeArea */</div><div class=\"line\">@property (nonatomic, readonly) NSLayoutRelation relation;/**&lt; default NSLayoutRelationEqual */</div><div class=\"line\"></div><div class=\"line\">- (void)config:(void (^)(WYKitConstraints *make))block; /**&lt; 设置好约束后可以定制一些偏移值 */</div><div class=\"line\"></div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">//.m</div><div class=\"line\">@interface WYKitConstraints ()</div><div class=\"line\">@property (nonatomic, assign) BOOL supportSafeArea;</div><div class=\"line\">@property (nonatomic, assign) NSLayoutRelation relation;</div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">@implementation WYKitConstraints : NSObject</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_settop:(NSLayoutConstraint *)top &#123;</div><div class=\"line\">    _top = top;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setleft:(NSLayoutConstraint *)left &#123;</div><div class=\"line\">    _left = left;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setbottom:(NSLayoutConstraint *)bottom &#123;</div><div class=\"line\">    _bottom = bottom;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setright:(NSLayoutConstraint *)right &#123;</div><div class=\"line\">    _right = right;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setwidth:(NSLayoutConstraint *)width &#123;</div><div class=\"line\">    _width = width;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setheight:(NSLayoutConstraint *)height &#123;</div><div class=\"line\">    _height = height;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setcenterX:(NSLayoutConstraint *)centerX &#123;</div><div class=\"line\">    _centerX = centerX;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)wykit_setcenterY:(NSLayoutConstraint *)centerY &#123;</div><div class=\"line\">    _centerY = centerY;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)config:(void (^)(WYKitConstraints *make))block &#123;</div><div class=\"line\">    if (block) block(self);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>下面给几个实际项目中的使用例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">//一个view布局参考父视图 离顶部5 左边5 宽180 高50并且后续可能会调整 可以用下面的一行代码简单实现</div><div class=\"line\">_segHeightLayout = [sView wykit_constraint:@5, @5, @0, @[], @180, @50, nil].height;</div><div class=\"line\"></div><div class=\"line\">//还有很多实际使用列子，通过下面这些约束就实现了一个iOS11的大标题导航栏并且加搜索的约束了 效果下面会给出gif</div><div class=\"line\">[self wykit_constraint:@0, @0, @[], @0, @[], @[], nil];</div><div class=\"line\">_segHeightLayout = [sView wykit_constraint:@[], @5, @0, @[], @180, @(kCPASegHeight), nil].height;</div><div class=\"line\">_searchHeightLayout = [searchBar wykit_constraint:@[], @10, sView.topAnchor, @(-10), @[], @(kCPASearchHeight), nil].height;</div><div class=\"line\">_largeTitleHeightLayout = [largeView wykit_constraint:@[], @15, searchBar.topAnchor, @(-15), @[], @(kCPALargeHeight), nil].height;</div><div class=\"line\">[tLabel wykit_constraint:@[], @0, @(-5), @0, nil];</div><div class=\"line\">_titleHeightLayout = [navBar wykit_constraint:@0, @0, rView.topAnchor, @0, @[], @(kCPATitleHeight), @(YES), nil].height;</div></pre></td></tr></table></figure></p>\n<p> 以上就是全部实现，欢迎交流讨论</p>\n"},{"title":"为你的APP加上DragDrop","tages":["iOS11","DragDrop"],"_content":"苹果最近发布了iOS11beta版，里面有很多激动人心的API，我们这里先体验一下DragDrop。Drag做为定义方提供一个可以拖拽的东西，可以是图片或文件等任意的东西。Drop是作为接收方，你可以指定你可以接收一些什么东西。\n\n我们这里以一个UICollectionView为例子，这里苹果已经给我们实现了这两个协议。\n```Objective-C\n@property (nonatomic, weak, nullable) id <UICollectionViewDragDelegate> dragDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);\n@property (nonatomic, weak, nullable) id <UICollectionViewDropDelegate> dropDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);\n```\n我们只要做很少的事情就可以搞定了一个简单的DragDrop了\n一、首先在你的CollectionViewController里面指定协议\n```Objective-C\nif (@available(iOS 11.0, *)) {\n    self.collectionView.dropDelegate = self;\n    self.collectionView.dropDelegate = self;\n}\n```\n二、实现Drop协议\n1.首先制定接收拖拽的方式，我们这里指定为copy，这样默认实现就不会移除drag位置的cell\n```Objective-C\n- (UICollectionViewDropProposal *)collectionView:(UICollectionView *)collectionView dropSessionDidUpdate:(id<UIDropSession>)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath {\n    return [[UICollectionViewDropProposal alloc] initWithDropOperation:UIDropOperationCopy];\n}\n```\n2.指定是否可以接收拖拽的东西，这里可以通过session的方法 hasItemsConformingToTypeIdentifiers: 判断是否是你可以处理的拖拽类型，比如这里只处理拖过来的图片\n```Objective-C\n- (BOOL)collectionView:(UICollectionView *)collectionView canHandleDropSession:(id<UIDropSession>)session {\n    return [session hasItemsConformingToTypeIdentifiers:@[(NSString *)kUTTypeImage]];\n}\n```\n3.处理拖拽过来的数据\n```Objective-C\n- (void)collectionView:(UICollectionView *)collectionView performDropWithCoordinator:(id<UICollectionViewDropCoordinator>)coordinator {\n    if (coordinator.session.localDragSession) { //来自自己当前APP的拖拽,可以直接拿到drag的时候自定义的数据\n        CGPoint point = [coordinator.session.localDragSession locationInView:collectionView];\n        NSIndexPath *indexPath = [collectionView indexPathForItemAtPoint:point]; //拿到了松手时候的目标cell  可以拿来做动画\n        \n        [coordinator.items enumerateObjectsUsingBlock:^(id<UICollectionViewDropItem>  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {\n            UIDragItem *dragItem = obj.dragItem;\n            if (dragItem.localObject) {\n                id object = dragItem.localObject; //这里就是drag的时候传的自定义数据\n            }\n        }];\n    } else { // \b\b来自别的APP的拖拽，这里需要从别的APP下载数据\n        [coordinator.items enumerateObjectsUsingBlock:^(id<UICollectionViewDropItem>  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {\n            UIDragItem *dragItem = obj.dragItem;\n            [dragItem.itemProvider loadFileRepresentationForTypeIdentifier:(NSString*)kUTTypeJPEG completionHandler:^(NSURL * _Nullable url, NSError * _Nullable error) {\n                //下载到拖拽过来的数据了\n            }];\n        }];\n    }\n}\n```\n三、实现Drag协议\n1.定制拖拽的对象，需要实现一个NSItemProviderWriting协议，告诉目标APP我们拖的是一个什么类型的数据，然后把数据处理一下给目标APP，还可以给一个处理进度给目标APP\n```Objective-C\n@interface WYDragFileItem : NSObject <NSItemProviderWriting>\n@end\n\n@implementation WYDragFileItem\n\n+ (NSArray<NSString *>*)writableTypeIdentifiersForItemProvider {\n    return @[(NSString*)kUTTypeJPEG, (NSString *)kUTTypeImage];\n}\n\n- (nullable NSProgress *)loadDataWithTypeIdentifier:(NSString *)typeIdentifier forItemProviderCompletionHandler:(void (^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler { //这里面可以是一个下载方法或者压缩方法或者格式转换方法，允许给一个进度让目标位置显示，可异步\n    completionHandler(UIImagePNGRepresentation([UIImage imageNamed:@\"image\"]), nil);\n    return nil;\n}\n\n@end\n```\n2.开始拖拽的时候包装拖拽数据\n```Objective-C\n- (NSArray<UIDragItem *> *)collectionView:(UICollectionView *)collectionView itemsForBeginningDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath {\n    NSItemProvider *provider = [[NSItemProvider alloc] initWithObject:dragObject]; //dragObject 是一个实现NSItemProviderWriting协议的数据，一会下面介绍\n    UIDragItem *item = [[UIDragItem alloc] initWithItemProvider:provider];\n    item.localObject = anyObject; //anyObject 是可以传递的任意自定义数据\n    return @[item];\n}\n```\n    \n这样一个简单的拖拽流程就完成了，细节或动画等这里就不写了，具体可以相互探讨一下。\ndemo这里就不放了，大家可以前往RDM下载 [微云-体验分支(iOS11)](http://rdm.oa.com/ci/product/fe597790-0f22-4a68-b4ee-2c589ddc5541/job/41267) 自行体验\n","source":"_posts/DragDrop.md","raw":"---\ntitle: 为你的APP加上DragDrop\ncategories: iOS\ntages: [iOS11,DragDrop]\n---\n苹果最近发布了iOS11beta版，里面有很多激动人心的API，我们这里先体验一下DragDrop。Drag做为定义方提供一个可以拖拽的东西，可以是图片或文件等任意的东西。Drop是作为接收方，你可以指定你可以接收一些什么东西。\n\n我们这里以一个UICollectionView为例子，这里苹果已经给我们实现了这两个协议。\n```Objective-C\n@property (nonatomic, weak, nullable) id <UICollectionViewDragDelegate> dragDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);\n@property (nonatomic, weak, nullable) id <UICollectionViewDropDelegate> dropDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);\n```\n我们只要做很少的事情就可以搞定了一个简单的DragDrop了\n一、首先在你的CollectionViewController里面指定协议\n```Objective-C\nif (@available(iOS 11.0, *)) {\n    self.collectionView.dropDelegate = self;\n    self.collectionView.dropDelegate = self;\n}\n```\n二、实现Drop协议\n1.首先制定接收拖拽的方式，我们这里指定为copy，这样默认实现就不会移除drag位置的cell\n```Objective-C\n- (UICollectionViewDropProposal *)collectionView:(UICollectionView *)collectionView dropSessionDidUpdate:(id<UIDropSession>)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath {\n    return [[UICollectionViewDropProposal alloc] initWithDropOperation:UIDropOperationCopy];\n}\n```\n2.指定是否可以接收拖拽的东西，这里可以通过session的方法 hasItemsConformingToTypeIdentifiers: 判断是否是你可以处理的拖拽类型，比如这里只处理拖过来的图片\n```Objective-C\n- (BOOL)collectionView:(UICollectionView *)collectionView canHandleDropSession:(id<UIDropSession>)session {\n    return [session hasItemsConformingToTypeIdentifiers:@[(NSString *)kUTTypeImage]];\n}\n```\n3.处理拖拽过来的数据\n```Objective-C\n- (void)collectionView:(UICollectionView *)collectionView performDropWithCoordinator:(id<UICollectionViewDropCoordinator>)coordinator {\n    if (coordinator.session.localDragSession) { //来自自己当前APP的拖拽,可以直接拿到drag的时候自定义的数据\n        CGPoint point = [coordinator.session.localDragSession locationInView:collectionView];\n        NSIndexPath *indexPath = [collectionView indexPathForItemAtPoint:point]; //拿到了松手时候的目标cell  可以拿来做动画\n        \n        [coordinator.items enumerateObjectsUsingBlock:^(id<UICollectionViewDropItem>  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {\n            UIDragItem *dragItem = obj.dragItem;\n            if (dragItem.localObject) {\n                id object = dragItem.localObject; //这里就是drag的时候传的自定义数据\n            }\n        }];\n    } else { // \b\b来自别的APP的拖拽，这里需要从别的APP下载数据\n        [coordinator.items enumerateObjectsUsingBlock:^(id<UICollectionViewDropItem>  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {\n            UIDragItem *dragItem = obj.dragItem;\n            [dragItem.itemProvider loadFileRepresentationForTypeIdentifier:(NSString*)kUTTypeJPEG completionHandler:^(NSURL * _Nullable url, NSError * _Nullable error) {\n                //下载到拖拽过来的数据了\n            }];\n        }];\n    }\n}\n```\n三、实现Drag协议\n1.定制拖拽的对象，需要实现一个NSItemProviderWriting协议，告诉目标APP我们拖的是一个什么类型的数据，然后把数据处理一下给目标APP，还可以给一个处理进度给目标APP\n```Objective-C\n@interface WYDragFileItem : NSObject <NSItemProviderWriting>\n@end\n\n@implementation WYDragFileItem\n\n+ (NSArray<NSString *>*)writableTypeIdentifiersForItemProvider {\n    return @[(NSString*)kUTTypeJPEG, (NSString *)kUTTypeImage];\n}\n\n- (nullable NSProgress *)loadDataWithTypeIdentifier:(NSString *)typeIdentifier forItemProviderCompletionHandler:(void (^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler { //这里面可以是一个下载方法或者压缩方法或者格式转换方法，允许给一个进度让目标位置显示，可异步\n    completionHandler(UIImagePNGRepresentation([UIImage imageNamed:@\"image\"]), nil);\n    return nil;\n}\n\n@end\n```\n2.开始拖拽的时候包装拖拽数据\n```Objective-C\n- (NSArray<UIDragItem *> *)collectionView:(UICollectionView *)collectionView itemsForBeginningDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath {\n    NSItemProvider *provider = [[NSItemProvider alloc] initWithObject:dragObject]; //dragObject 是一个实现NSItemProviderWriting协议的数据，一会下面介绍\n    UIDragItem *item = [[UIDragItem alloc] initWithItemProvider:provider];\n    item.localObject = anyObject; //anyObject 是可以传递的任意自定义数据\n    return @[item];\n}\n```\n    \n这样一个简单的拖拽流程就完成了，细节或动画等这里就不写了，具体可以相互探讨一下。\ndemo这里就不放了，大家可以前往RDM下载 [微云-体验分支(iOS11)](http://rdm.oa.com/ci/product/fe597790-0f22-4a68-b4ee-2c589ddc5541/job/41267) 自行体验\n","slug":"DragDrop","published":1,"date":"2017-03-03T09:12:33.000Z","updated":"2017-06-30T15:03:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbjgns1600026hredz9syva0","content":"<p>苹果最近发布了iOS11beta版，里面有很多激动人心的API，我们这里先体验一下DragDrop。Drag做为定义方提供一个可以拖拽的东西，可以是图片或文件等任意的东西。Drop是作为接收方，你可以指定你可以接收一些什么东西。</p>\n<p>我们这里以一个UICollectionView为例子，这里苹果已经给我们实现了这两个协议。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@property (nonatomic, weak, nullable) id &lt;UICollectionViewDragDelegate&gt; dragDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);</div><div class=\"line\">@property (nonatomic, weak, nullable) id &lt;UICollectionViewDropDelegate&gt; dropDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);</div></pre></td></tr></table></figure></p>\n<p>我们只要做很少的事情就可以搞定了一个简单的DragDrop了<br>一、首先在你的CollectionViewController里面指定协议<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (@available(iOS 11.0, *)) &#123;</div><div class=\"line\">    self.collectionView.dropDelegate = self;</div><div class=\"line\">    self.collectionView.dropDelegate = self;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>二、实现Drop协议<br>1.首先制定接收拖拽的方式，我们这里指定为copy，这样默认实现就不会移除drag位置的cell<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (UICollectionViewDropProposal *)collectionView:(UICollectionView *)collectionView dropSessionDidUpdate:(id&lt;UIDropSession&gt;)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath &#123;</div><div class=\"line\">    return [[UICollectionViewDropProposal alloc] initWithDropOperation:UIDropOperationCopy];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2.指定是否可以接收拖拽的东西，这里可以通过session的方法 hasItemsConformingToTypeIdentifiers: 判断是否是你可以处理的拖拽类型，比如这里只处理拖过来的图片<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)collectionView:(UICollectionView *)collectionView canHandleDropSession:(id&lt;UIDropSession&gt;)session &#123;</div><div class=\"line\">    return [session hasItemsConformingToTypeIdentifiers:@[(NSString *)kUTTypeImage]];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.处理拖拽过来的数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (void)collectionView:(UICollectionView *)collectionView performDropWithCoordinator:(id&lt;UICollectionViewDropCoordinator&gt;)coordinator &#123;</div><div class=\"line\">    if (coordinator.session.localDragSession) &#123; //来自自己当前APP的拖拽,可以直接拿到drag的时候自定义的数据</div><div class=\"line\">        CGPoint point = [coordinator.session.localDragSession locationInView:collectionView];</div><div class=\"line\">        NSIndexPath *indexPath = [collectionView indexPathForItemAtPoint:point]; //拿到了松手时候的目标cell  可以拿来做动画</div><div class=\"line\">        </div><div class=\"line\">        [coordinator.items enumerateObjectsUsingBlock:^(id&lt;UICollectionViewDropItem&gt;  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</div><div class=\"line\">            UIDragItem *dragItem = obj.dragItem;</div><div class=\"line\">            if (dragItem.localObject) &#123;</div><div class=\"line\">                id object = dragItem.localObject; //这里就是drag的时候传的自定义数据</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;];</div><div class=\"line\">    &#125; else &#123; // \b\b来自别的APP的拖拽，这里需要从别的APP下载数据</div><div class=\"line\">        [coordinator.items enumerateObjectsUsingBlock:^(id&lt;UICollectionViewDropItem&gt;  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</div><div class=\"line\">            UIDragItem *dragItem = obj.dragItem;</div><div class=\"line\">            [dragItem.itemProvider loadFileRepresentationForTypeIdentifier:(NSString*)kUTTypeJPEG completionHandler:^(NSURL * _Nullable url, NSError * _Nullable error) &#123;</div><div class=\"line\">                //下载到拖拽过来的数据了</div><div class=\"line\">            &#125;];</div><div class=\"line\">        &#125;];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>三、实现Drag协议<br>1.定制拖拽的对象，需要实现一个NSItemProviderWriting协议，告诉目标APP我们拖的是一个什么类型的数据，然后把数据处理一下给目标APP，还可以给一个处理进度给目标APP<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">@interface WYDragFileItem : NSObject &lt;NSItemProviderWriting&gt;</div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">@implementation WYDragFileItem</div><div class=\"line\"></div><div class=\"line\">+ (NSArray&lt;NSString *&gt;*)writableTypeIdentifiersForItemProvider &#123;</div><div class=\"line\">    return @[(NSString*)kUTTypeJPEG, (NSString *)kUTTypeImage];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (nullable NSProgress *)loadDataWithTypeIdentifier:(NSString *)typeIdentifier forItemProviderCompletionHandler:(void (^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler &#123; //这里面可以是一个下载方法或者压缩方法或者格式转换方法，允许给一个进度让目标位置显示，可异步</div><div class=\"line\">    completionHandler(UIImagePNGRepresentation([UIImage imageNamed:@&quot;image&quot;]), nil);</div><div class=\"line\">    return nil;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>2.开始拖拽的时候包装拖拽数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (NSArray&lt;UIDragItem *&gt; *)collectionView:(UICollectionView *)collectionView itemsForBeginningDragSession:(id&lt;UIDragSession&gt;)session atIndexPath:(NSIndexPath *)indexPath &#123;</div><div class=\"line\">    NSItemProvider *provider = [[NSItemProvider alloc] initWithObject:dragObject]; //dragObject 是一个实现NSItemProviderWriting协议的数据，一会下面介绍</div><div class=\"line\">    UIDragItem *item = [[UIDragItem alloc] initWithItemProvider:provider];</div><div class=\"line\">    item.localObject = anyObject; //anyObject 是可以传递的任意自定义数据</div><div class=\"line\">    return @[item];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这样一个简单的拖拽流程就完成了，细节或动画等这里就不写了，具体可以相互探讨一下。<br>demo这里就不放了，大家可以前往RDM下载 <a href=\"http://rdm.oa.com/ci/product/fe597790-0f22-4a68-b4ee-2c589ddc5541/job/41267\" target=\"_blank\" rel=\"external\">微云-体验分支(iOS11)</a> 自行体验</p>\n","excerpt":"","more":"<p>苹果最近发布了iOS11beta版，里面有很多激动人心的API，我们这里先体验一下DragDrop。Drag做为定义方提供一个可以拖拽的东西，可以是图片或文件等任意的东西。Drop是作为接收方，你可以指定你可以接收一些什么东西。</p>\n<p>我们这里以一个UICollectionView为例子，这里苹果已经给我们实现了这两个协议。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@property (nonatomic, weak, nullable) id &lt;UICollectionViewDragDelegate&gt; dragDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);</div><div class=\"line\">@property (nonatomic, weak, nullable) id &lt;UICollectionViewDropDelegate&gt; dropDelegate API_AVAILABLE(ios(11.0)) API_UNAVAILABLE(tvos, watchos);</div></pre></td></tr></table></figure></p>\n<p>我们只要做很少的事情就可以搞定了一个简单的DragDrop了<br>一、首先在你的CollectionViewController里面指定协议<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (@available(iOS 11.0, *)) &#123;</div><div class=\"line\">    self.collectionView.dropDelegate = self;</div><div class=\"line\">    self.collectionView.dropDelegate = self;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>二、实现Drop协议<br>1.首先制定接收拖拽的方式，我们这里指定为copy，这样默认实现就不会移除drag位置的cell<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (UICollectionViewDropProposal *)collectionView:(UICollectionView *)collectionView dropSessionDidUpdate:(id&lt;UIDropSession&gt;)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath &#123;</div><div class=\"line\">    return [[UICollectionViewDropProposal alloc] initWithDropOperation:UIDropOperationCopy];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2.指定是否可以接收拖拽的东西，这里可以通过session的方法 hasItemsConformingToTypeIdentifiers: 判断是否是你可以处理的拖拽类型，比如这里只处理拖过来的图片<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)collectionView:(UICollectionView *)collectionView canHandleDropSession:(id&lt;UIDropSession&gt;)session &#123;</div><div class=\"line\">    return [session hasItemsConformingToTypeIdentifiers:@[(NSString *)kUTTypeImage]];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.处理拖拽过来的数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (void)collectionView:(UICollectionView *)collectionView performDropWithCoordinator:(id&lt;UICollectionViewDropCoordinator&gt;)coordinator &#123;</div><div class=\"line\">    if (coordinator.session.localDragSession) &#123; //来自自己当前APP的拖拽,可以直接拿到drag的时候自定义的数据</div><div class=\"line\">        CGPoint point = [coordinator.session.localDragSession locationInView:collectionView];</div><div class=\"line\">        NSIndexPath *indexPath = [collectionView indexPathForItemAtPoint:point]; //拿到了松手时候的目标cell  可以拿来做动画</div><div class=\"line\">        </div><div class=\"line\">        [coordinator.items enumerateObjectsUsingBlock:^(id&lt;UICollectionViewDropItem&gt;  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</div><div class=\"line\">            UIDragItem *dragItem = obj.dragItem;</div><div class=\"line\">            if (dragItem.localObject) &#123;</div><div class=\"line\">                id object = dragItem.localObject; //这里就是drag的时候传的自定义数据</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;];</div><div class=\"line\">    &#125; else &#123; // \b\b来自别的APP的拖拽，这里需要从别的APP下载数据</div><div class=\"line\">        [coordinator.items enumerateObjectsUsingBlock:^(id&lt;UICollectionViewDropItem&gt;  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</div><div class=\"line\">            UIDragItem *dragItem = obj.dragItem;</div><div class=\"line\">            [dragItem.itemProvider loadFileRepresentationForTypeIdentifier:(NSString*)kUTTypeJPEG completionHandler:^(NSURL * _Nullable url, NSError * _Nullable error) &#123;</div><div class=\"line\">                //下载到拖拽过来的数据了</div><div class=\"line\">            &#125;];</div><div class=\"line\">        &#125;];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>三、实现Drag协议<br>1.定制拖拽的对象，需要实现一个NSItemProviderWriting协议，告诉目标APP我们拖的是一个什么类型的数据，然后把数据处理一下给目标APP，还可以给一个处理进度给目标APP<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">@interface WYDragFileItem : NSObject &lt;NSItemProviderWriting&gt;</div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">@implementation WYDragFileItem</div><div class=\"line\"></div><div class=\"line\">+ (NSArray&lt;NSString *&gt;*)writableTypeIdentifiersForItemProvider &#123;</div><div class=\"line\">    return @[(NSString*)kUTTypeJPEG, (NSString *)kUTTypeImage];</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (nullable NSProgress *)loadDataWithTypeIdentifier:(NSString *)typeIdentifier forItemProviderCompletionHandler:(void (^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler &#123; //这里面可以是一个下载方法或者压缩方法或者格式转换方法，允许给一个进度让目标位置显示，可异步</div><div class=\"line\">    completionHandler(UIImagePNGRepresentation([UIImage imageNamed:@&quot;image&quot;]), nil);</div><div class=\"line\">    return nil;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>2.开始拖拽的时候包装拖拽数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (NSArray&lt;UIDragItem *&gt; *)collectionView:(UICollectionView *)collectionView itemsForBeginningDragSession:(id&lt;UIDragSession&gt;)session atIndexPath:(NSIndexPath *)indexPath &#123;</div><div class=\"line\">    NSItemProvider *provider = [[NSItemProvider alloc] initWithObject:dragObject]; //dragObject 是一个实现NSItemProviderWriting协议的数据，一会下面介绍</div><div class=\"line\">    UIDragItem *item = [[UIDragItem alloc] initWithItemProvider:provider];</div><div class=\"line\">    item.localObject = anyObject; //anyObject 是可以传递的任意自定义数据</div><div class=\"line\">    return @[item];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这样一个简单的拖拽流程就完成了，细节或动画等这里就不写了，具体可以相互探讨一下。<br>demo这里就不放了，大家可以前往RDM下载 <a href=\"http://rdm.oa.com/ci/product/fe597790-0f22-4a68-b4ee-2c589ddc5541/job/41267\">微云-体验分支(iOS11)</a> 自行体验</p>\n"},{"title":"填坑路之:ITMS-90171","tages":["iOS","Xcode","ITMS-90171"],"_content":"最近Swift和Objective-c混编使用脚本打包提交App Store遇到报错 ITMS-90171:\"Invalid Bundle Structure - The binary file \"xxx.app/libswiftRemoteMirror.dylib\" is not permitted\" \n# 不啰嗦 这里把解决问题放第一位，所以这里先贴打包脚本源码\n\n```bash\nTARGET=\"xxx\" #这里一般填你的工程名字\nPROJECT_NAME=$TARGET\nPROJECT_FILE=$PROJECT_NAME.xcodeproj\nCONFIGURATION=Release\nBUILD_FOLDER=build/$CONFIGURATION-iphoneos\nRESULT_FOLDER=result\n\necho \"clear folder\"\nrm -rf $BUILD_FOLDER\nmkdir -p $BUILD_FOLDER\nrm -rf $RESULT_FOLDER\nmkdir -p $RESULT_FOLDER\n\necho clean...\nxcodebuild  -project  $PROJECT_FILE  -scheme  $PROJECT_NAME  -configuration  $CONFIGURATION clean\n\necho begin xcodebuild...\nxcodebuild -project $PROJECT_FILE -scheme $PROJECT_NAME -configuration $CONFIGURATION  -archivePath $BUILD_FOLDER/$PROJECT_NAME.xcarchive  archive\n\necho begin xcrun...\nxcrun xcodebuild -exportArchive -exportOptionsPlist build_config/archive_option.plist -archivePath  $BUILD_FOLDER/$PROJECT_NAME.xcarchive -exportPath $RESULT_FOLDER\n\necho $RESULT_FOLDER/$PROJECT_NAME.ipa\n```\n这里附上archive_option.plist文件内容\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>method</key>\n    <string>app-store</string>\n    <key>teamID</key>\n    <string>xxx</string>\n    <key>uploadSymbols</key>\n    <false/>\n</dict>\n</plist>\n```\n[xcrun命令](http://www.jianshu.com/p/bccbb37f21f9)参考\n\n# 有闲情逸致的可以看看下面的解决过程\n首先google之查到一些信息，libswiftRemoteMirror.dylib这货是Xcode挖的坑，Swift跟oc混编用Xcode8的.app打包就会自动给你放个libswiftRemoteMirror.dylib这货在包里面，然后你提交的时候它有告诉你不允许包里面有这货，这时候我就想骂人了，但是想了下英语除了会fuck就不会其它高雅一点的了，于是放弃骂人，还是继续埋头想办法吧...于是习惯性的在网上找到[一篇文章](http://www.jianshu.com/p/03e4a3597af5),这文章里面主要说了三个方法，先列出来\n```bash\n1.通过Xcode的Archive方式打包。Archive打的包，就没有包含这个libswiftRemoteMirror.dylib文件。\n2.手动删除.app中的libswiftRemoteMirror.dylib文件，然后进行.app打包。\n3.在Xcode7中进行.app打包。在Xcode7和Xcode8中分别进行.app打包，发现Xcode7打包后没有libswiftRemoteMirror.dylib文件\n```\n由于本人比较懒，能用脚本解决的事绝对不用鼠标点第二下，所以所有方法都是用脚本实现的\n首先，方法3直接排除，尼玛苹果Xcode向下兼容做得最扯蛋的，Xcode8开发的项目还拿Xcode7去运行简直嫌自己被坑得不够惨吧！\n然后看方法2感觉很简单的样子，于是在压缩成ipa的脚本前面加了这两行代码（删文件+重签）\n```bash\nrm -rf $BUILD_DIR/$PROJECT.app/libswiftRemoteMirror.dylib\ncodesign -f -s 'xxx xxx xx, Ltd (xxxx)' $BUILD_DIR/$PROJECT.app\n```\n搞定提交，以为完事可以回家打豆豆了，但是苹果君还想让我陪它玩玩，于是又跳出来个错误 ITMS-90166:'Missing Code Signing Entitlements.No entitlements found in boundle 'com.xxx.xxx'for executable 'xxx/xxx.app/xxx'.'，好吧，你是大爷，你说错咱改还不行吗。于是继续找google君找答案，找了[几个类似的](http://stackoverflow.com/questions/29684966/missing-code-signing-entitlements-for-resource-bundle-xcode-6-3)但是都跟我遇到的情况都不一样，而且项目急需上架，于是我准备先用前面提到的方法1：Archive打包，但是打包完成后提交还是遇到报这个错,到这里我有点懵逼了，这时候一个叫柠檬的同事说遇到过相同的情况，咨询之，对方说他们改了脚本用Archive打包就搞定了，一语惊醒梦中人(谢谢柠檬同学)，对啊哥怎么没想到可以改用脚本Archive打包呢这样又可以规避一些Xcode的bug，于是把脚本中的.app打包方式改成Archive打包后就提交成功了。详细脚本请看上面\n","source":"_posts/ITMS-90171.md","raw":"---\ntitle: 填坑路之:ITMS-90171\ncategories: iOS\ntages: [iOS,Xcode,ITMS-90171]\n---\n最近Swift和Objective-c混编使用脚本打包提交App Store遇到报错 ITMS-90171:\"Invalid Bundle Structure - The binary file \"xxx.app/libswiftRemoteMirror.dylib\" is not permitted\" \n# 不啰嗦 这里把解决问题放第一位，所以这里先贴打包脚本源码\n\n```bash\nTARGET=\"xxx\" #这里一般填你的工程名字\nPROJECT_NAME=$TARGET\nPROJECT_FILE=$PROJECT_NAME.xcodeproj\nCONFIGURATION=Release\nBUILD_FOLDER=build/$CONFIGURATION-iphoneos\nRESULT_FOLDER=result\n\necho \"clear folder\"\nrm -rf $BUILD_FOLDER\nmkdir -p $BUILD_FOLDER\nrm -rf $RESULT_FOLDER\nmkdir -p $RESULT_FOLDER\n\necho clean...\nxcodebuild  -project  $PROJECT_FILE  -scheme  $PROJECT_NAME  -configuration  $CONFIGURATION clean\n\necho begin xcodebuild...\nxcodebuild -project $PROJECT_FILE -scheme $PROJECT_NAME -configuration $CONFIGURATION  -archivePath $BUILD_FOLDER/$PROJECT_NAME.xcarchive  archive\n\necho begin xcrun...\nxcrun xcodebuild -exportArchive -exportOptionsPlist build_config/archive_option.plist -archivePath  $BUILD_FOLDER/$PROJECT_NAME.xcarchive -exportPath $RESULT_FOLDER\n\necho $RESULT_FOLDER/$PROJECT_NAME.ipa\n```\n这里附上archive_option.plist文件内容\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>method</key>\n    <string>app-store</string>\n    <key>teamID</key>\n    <string>xxx</string>\n    <key>uploadSymbols</key>\n    <false/>\n</dict>\n</plist>\n```\n[xcrun命令](http://www.jianshu.com/p/bccbb37f21f9)参考\n\n# 有闲情逸致的可以看看下面的解决过程\n首先google之查到一些信息，libswiftRemoteMirror.dylib这货是Xcode挖的坑，Swift跟oc混编用Xcode8的.app打包就会自动给你放个libswiftRemoteMirror.dylib这货在包里面，然后你提交的时候它有告诉你不允许包里面有这货，这时候我就想骂人了，但是想了下英语除了会fuck就不会其它高雅一点的了，于是放弃骂人，还是继续埋头想办法吧...于是习惯性的在网上找到[一篇文章](http://www.jianshu.com/p/03e4a3597af5),这文章里面主要说了三个方法，先列出来\n```bash\n1.通过Xcode的Archive方式打包。Archive打的包，就没有包含这个libswiftRemoteMirror.dylib文件。\n2.手动删除.app中的libswiftRemoteMirror.dylib文件，然后进行.app打包。\n3.在Xcode7中进行.app打包。在Xcode7和Xcode8中分别进行.app打包，发现Xcode7打包后没有libswiftRemoteMirror.dylib文件\n```\n由于本人比较懒，能用脚本解决的事绝对不用鼠标点第二下，所以所有方法都是用脚本实现的\n首先，方法3直接排除，尼玛苹果Xcode向下兼容做得最扯蛋的，Xcode8开发的项目还拿Xcode7去运行简直嫌自己被坑得不够惨吧！\n然后看方法2感觉很简单的样子，于是在压缩成ipa的脚本前面加了这两行代码（删文件+重签）\n```bash\nrm -rf $BUILD_DIR/$PROJECT.app/libswiftRemoteMirror.dylib\ncodesign -f -s 'xxx xxx xx, Ltd (xxxx)' $BUILD_DIR/$PROJECT.app\n```\n搞定提交，以为完事可以回家打豆豆了，但是苹果君还想让我陪它玩玩，于是又跳出来个错误 ITMS-90166:'Missing Code Signing Entitlements.No entitlements found in boundle 'com.xxx.xxx'for executable 'xxx/xxx.app/xxx'.'，好吧，你是大爷，你说错咱改还不行吗。于是继续找google君找答案，找了[几个类似的](http://stackoverflow.com/questions/29684966/missing-code-signing-entitlements-for-resource-bundle-xcode-6-3)但是都跟我遇到的情况都不一样，而且项目急需上架，于是我准备先用前面提到的方法1：Archive打包，但是打包完成后提交还是遇到报这个错,到这里我有点懵逼了，这时候一个叫柠檬的同事说遇到过相同的情况，咨询之，对方说他们改了脚本用Archive打包就搞定了，一语惊醒梦中人(谢谢柠檬同学)，对啊哥怎么没想到可以改用脚本Archive打包呢这样又可以规避一些Xcode的bug，于是把脚本中的.app打包方式改成Archive打包后就提交成功了。详细脚本请看上面\n","slug":"ITMS-90171","published":1,"date":"2017-03-03T09:12:33.000Z","updated":"2017-03-03T09:12:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbjgns1b00046hremnu9jqvd","content":"<p>最近Swift和Objective-c混编使用脚本打包提交App Store遇到报错 ITMS-90171:”Invalid Bundle Structure - The binary file “xxx.app/libswiftRemoteMirror.dylib” is not permitted” </p>\n<h1 id=\"不啰嗦-这里把解决问题放第一位，所以这里先贴打包脚本源码\"><a href=\"#不啰嗦-这里把解决问题放第一位，所以这里先贴打包脚本源码\" class=\"headerlink\" title=\"不啰嗦 这里把解决问题放第一位，所以这里先贴打包脚本源码\"></a>不啰嗦 这里把解决问题放第一位，所以这里先贴打包脚本源码</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">TARGET=<span class=\"string\">\"xxx\"</span> <span class=\"comment\">#这里一般填你的工程名字</span></div><div class=\"line\">PROJECT_NAME=<span class=\"variable\">$TARGET</span></div><div class=\"line\">PROJECT_FILE=<span class=\"variable\">$PROJECT_NAME</span>.xcodeproj</div><div class=\"line\">CONFIGURATION=Release</div><div class=\"line\">BUILD_FOLDER=build/<span class=\"variable\">$CONFIGURATION</span>-iphoneos</div><div class=\"line\">RESULT_FOLDER=result</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"clear folder\"</span></div><div class=\"line\">rm -rf <span class=\"variable\">$BUILD_FOLDER</span></div><div class=\"line\">mkdir -p <span class=\"variable\">$BUILD_FOLDER</span></div><div class=\"line\">rm -rf <span class=\"variable\">$RESULT_FOLDER</span></div><div class=\"line\">mkdir -p <span class=\"variable\">$RESULT_FOLDER</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> clean...</div><div class=\"line\">xcodebuild  -project  <span class=\"variable\">$PROJECT_FILE</span>  -scheme  <span class=\"variable\">$PROJECT_NAME</span>  -configuration  <span class=\"variable\">$CONFIGURATION</span> clean</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> begin xcodebuild...</div><div class=\"line\">xcodebuild -project <span class=\"variable\">$PROJECT_FILE</span> -scheme <span class=\"variable\">$PROJECT_NAME</span> -configuration <span class=\"variable\">$CONFIGURATION</span>  -archivePath <span class=\"variable\">$BUILD_FOLDER</span>/<span class=\"variable\">$PROJECT_NAME</span>.xcarchive  archive</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> begin xcrun...</div><div class=\"line\">xcrun xcodebuild -exportArchive -exportOptionsPlist build_config/archive_option.plist -archivePath  <span class=\"variable\">$BUILD_FOLDER</span>/<span class=\"variable\">$PROJECT_NAME</span>.xcarchive -exportPath <span class=\"variable\">$RESULT_FOLDER</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RESULT_FOLDER</span>/<span class=\"variable\">$PROJECT_NAME</span>.ipa</div></pre></td></tr></table></figure>\n<p>这里附上archive_option.plist文件内容<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span>?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC <span class=\"string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span>&gt;</div><div class=\"line\">&lt;plist version=<span class=\"string\">\"1.0\"</span>&gt;</div><div class=\"line\">&lt;dict&gt;</div><div class=\"line\">    &lt;key&gt;method&lt;/key&gt;</div><div class=\"line\">    &lt;string&gt;app-store&lt;/string&gt;</div><div class=\"line\">    &lt;key&gt;teamID&lt;/key&gt;</div><div class=\"line\">    &lt;string&gt;xxx&lt;/string&gt;</div><div class=\"line\">    &lt;key&gt;uploadSymbols&lt;/key&gt;</div><div class=\"line\">    &lt;<span class=\"literal\">false</span>/&gt;</div><div class=\"line\">&lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://www.jianshu.com/p/bccbb37f21f9\" target=\"_blank\" rel=\"external\">xcrun命令</a>参考</p>\n<h1 id=\"有闲情逸致的可以看看下面的解决过程\"><a href=\"#有闲情逸致的可以看看下面的解决过程\" class=\"headerlink\" title=\"有闲情逸致的可以看看下面的解决过程\"></a>有闲情逸致的可以看看下面的解决过程</h1><p>首先google之查到一些信息，libswiftRemoteMirror.dylib这货是Xcode挖的坑，Swift跟oc混编用Xcode8的.app打包就会自动给你放个libswiftRemoteMirror.dylib这货在包里面，然后你提交的时候它有告诉你不允许包里面有这货，这时候我就想骂人了，但是想了下英语除了会fuck就不会其它高雅一点的了，于是放弃骂人，还是继续埋头想办法吧…于是习惯性的在网上找到<a href=\"http://www.jianshu.com/p/03e4a3597af5\" target=\"_blank\" rel=\"external\">一篇文章</a>,这文章里面主要说了三个方法，先列出来<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.通过Xcode的Archive方式打包。Archive打的包，就没有包含这个libswiftRemoteMirror.dylib文件。</div><div class=\"line\">2.手动删除.app中的libswiftRemoteMirror.dylib文件，然后进行.app打包。</div><div class=\"line\">3.在Xcode7中进行.app打包。在Xcode7和Xcode8中分别进行.app打包，发现Xcode7打包后没有libswiftRemoteMirror.dylib文件</div></pre></td></tr></table></figure></p>\n<p>由于本人比较懒，能用脚本解决的事绝对不用鼠标点第二下，所以所有方法都是用脚本实现的<br>首先，方法3直接排除，尼玛苹果Xcode向下兼容做得最扯蛋的，Xcode8开发的项目还拿Xcode7去运行简直嫌自己被坑得不够惨吧！<br>然后看方法2感觉很简单的样子，于是在压缩成ipa的脚本前面加了这两行代码（删文件+重签）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm -rf <span class=\"variable\">$BUILD_DIR</span>/<span class=\"variable\">$PROJECT</span>.app/libswiftRemoteMirror.dylib</div><div class=\"line\">codesign <span class=\"_\">-f</span> <span class=\"_\">-s</span> <span class=\"string\">'xxx xxx xx, Ltd (xxxx)'</span> <span class=\"variable\">$BUILD_DIR</span>/<span class=\"variable\">$PROJECT</span>.app</div></pre></td></tr></table></figure></p>\n<p>搞定提交，以为完事可以回家打豆豆了，但是苹果君还想让我陪它玩玩，于是又跳出来个错误 ITMS-90166:’Missing Code Signing Entitlements.No entitlements found in boundle ‘com.xxx.xxx’for executable ‘xxx/xxx.app/xxx’.’，好吧，你是大爷，你说错咱改还不行吗。于是继续找google君找答案，找了<a href=\"http://stackoverflow.com/questions/29684966/missing-code-signing-entitlements-for-resource-bundle-xcode-6-3\" target=\"_blank\" rel=\"external\">几个类似的</a>但是都跟我遇到的情况都不一样，而且项目急需上架，于是我准备先用前面提到的方法1：Archive打包，但是打包完成后提交还是遇到报这个错,到这里我有点懵逼了，这时候一个叫柠檬的同事说遇到过相同的情况，咨询之，对方说他们改了脚本用Archive打包就搞定了，一语惊醒梦中人(谢谢柠檬同学)，对啊哥怎么没想到可以改用脚本Archive打包呢这样又可以规避一些Xcode的bug，于是把脚本中的.app打包方式改成Archive打包后就提交成功了。详细脚本请看上面</p>\n","excerpt":"","more":"<p>最近Swift和Objective-c混编使用脚本打包提交App Store遇到报错 ITMS-90171:”Invalid Bundle Structure - The binary file “xxx.app/libswiftRemoteMirror.dylib” is not permitted” </p>\n<h1 id=\"不啰嗦-这里把解决问题放第一位，所以这里先贴打包脚本源码\"><a href=\"#不啰嗦-这里把解决问题放第一位，所以这里先贴打包脚本源码\" class=\"headerlink\" title=\"不啰嗦 这里把解决问题放第一位，所以这里先贴打包脚本源码\"></a>不啰嗦 这里把解决问题放第一位，所以这里先贴打包脚本源码</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">TARGET=<span class=\"string\">\"xxx\"</span> <span class=\"comment\">#这里一般填你的工程名字</span></div><div class=\"line\">PROJECT_NAME=<span class=\"variable\">$TARGET</span></div><div class=\"line\">PROJECT_FILE=<span class=\"variable\">$PROJECT_NAME</span>.xcodeproj</div><div class=\"line\">CONFIGURATION=Release</div><div class=\"line\">BUILD_FOLDER=build/<span class=\"variable\">$CONFIGURATION</span>-iphoneos</div><div class=\"line\">RESULT_FOLDER=result</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"clear folder\"</span></div><div class=\"line\">rm -rf <span class=\"variable\">$BUILD_FOLDER</span></div><div class=\"line\">mkdir -p <span class=\"variable\">$BUILD_FOLDER</span></div><div class=\"line\">rm -rf <span class=\"variable\">$RESULT_FOLDER</span></div><div class=\"line\">mkdir -p <span class=\"variable\">$RESULT_FOLDER</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> clean...</div><div class=\"line\">xcodebuild  -project  <span class=\"variable\">$PROJECT_FILE</span>  -scheme  <span class=\"variable\">$PROJECT_NAME</span>  -configuration  <span class=\"variable\">$CONFIGURATION</span> clean</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> begin xcodebuild...</div><div class=\"line\">xcodebuild -project <span class=\"variable\">$PROJECT_FILE</span> -scheme <span class=\"variable\">$PROJECT_NAME</span> -configuration <span class=\"variable\">$CONFIGURATION</span>  -archivePath <span class=\"variable\">$BUILD_FOLDER</span>/<span class=\"variable\">$PROJECT_NAME</span>.xcarchive  archive</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> begin xcrun...</div><div class=\"line\">xcrun xcodebuild -exportArchive -exportOptionsPlist build_config/archive_option.plist -archivePath  <span class=\"variable\">$BUILD_FOLDER</span>/<span class=\"variable\">$PROJECT_NAME</span>.xcarchive -exportPath <span class=\"variable\">$RESULT_FOLDER</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RESULT_FOLDER</span>/<span class=\"variable\">$PROJECT_NAME</span>.ipa</div></pre></td></tr></table></figure>\n<p>这里附上archive_option.plist文件内容<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span>?&gt;</div><div class=\"line\">&lt;!DOCTYPE plist PUBLIC <span class=\"string\">\"-//Apple//DTD PLIST 1.0//EN\"</span> <span class=\"string\">\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"</span>&gt;</div><div class=\"line\">&lt;plist version=<span class=\"string\">\"1.0\"</span>&gt;</div><div class=\"line\">&lt;dict&gt;</div><div class=\"line\">    &lt;key&gt;method&lt;/key&gt;</div><div class=\"line\">    &lt;string&gt;app-store&lt;/string&gt;</div><div class=\"line\">    &lt;key&gt;teamID&lt;/key&gt;</div><div class=\"line\">    &lt;string&gt;xxx&lt;/string&gt;</div><div class=\"line\">    &lt;key&gt;uploadSymbols&lt;/key&gt;</div><div class=\"line\">    &lt;<span class=\"literal\">false</span>/&gt;</div><div class=\"line\">&lt;/dict&gt;</div><div class=\"line\">&lt;/plist&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://www.jianshu.com/p/bccbb37f21f9\">xcrun命令</a>参考</p>\n<h1 id=\"有闲情逸致的可以看看下面的解决过程\"><a href=\"#有闲情逸致的可以看看下面的解决过程\" class=\"headerlink\" title=\"有闲情逸致的可以看看下面的解决过程\"></a>有闲情逸致的可以看看下面的解决过程</h1><p>首先google之查到一些信息，libswiftRemoteMirror.dylib这货是Xcode挖的坑，Swift跟oc混编用Xcode8的.app打包就会自动给你放个libswiftRemoteMirror.dylib这货在包里面，然后你提交的时候它有告诉你不允许包里面有这货，这时候我就想骂人了，但是想了下英语除了会fuck就不会其它高雅一点的了，于是放弃骂人，还是继续埋头想办法吧…于是习惯性的在网上找到<a href=\"http://www.jianshu.com/p/03e4a3597af5\">一篇文章</a>,这文章里面主要说了三个方法，先列出来<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.通过Xcode的Archive方式打包。Archive打的包，就没有包含这个libswiftRemoteMirror.dylib文件。</div><div class=\"line\">2.手动删除.app中的libswiftRemoteMirror.dylib文件，然后进行.app打包。</div><div class=\"line\">3.在Xcode7中进行.app打包。在Xcode7和Xcode8中分别进行.app打包，发现Xcode7打包后没有libswiftRemoteMirror.dylib文件</div></pre></td></tr></table></figure></p>\n<p>由于本人比较懒，能用脚本解决的事绝对不用鼠标点第二下，所以所有方法都是用脚本实现的<br>首先，方法3直接排除，尼玛苹果Xcode向下兼容做得最扯蛋的，Xcode8开发的项目还拿Xcode7去运行简直嫌自己被坑得不够惨吧！<br>然后看方法2感觉很简单的样子，于是在压缩成ipa的脚本前面加了这两行代码（删文件+重签）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm -rf <span class=\"variable\">$BUILD_DIR</span>/<span class=\"variable\">$PROJECT</span>.app/libswiftRemoteMirror.dylib</div><div class=\"line\">codesign <span class=\"_\">-f</span> <span class=\"_\">-s</span> <span class=\"string\">'xxx xxx xx, Ltd (xxxx)'</span> <span class=\"variable\">$BUILD_DIR</span>/<span class=\"variable\">$PROJECT</span>.app</div></pre></td></tr></table></figure></p>\n<p>搞定提交，以为完事可以回家打豆豆了，但是苹果君还想让我陪它玩玩，于是又跳出来个错误 ITMS-90166:’Missing Code Signing Entitlements.No entitlements found in boundle ‘com.xxx.xxx’for executable ‘xxx/xxx.app/xxx’.’，好吧，你是大爷，你说错咱改还不行吗。于是继续找google君找答案，找了<a href=\"http://stackoverflow.com/questions/29684966/missing-code-signing-entitlements-for-resource-bundle-xcode-6-3\">几个类似的</a>但是都跟我遇到的情况都不一样，而且项目急需上架，于是我准备先用前面提到的方法1：Archive打包，但是打包完成后提交还是遇到报这个错,到这里我有点懵逼了，这时候一个叫柠檬的同事说遇到过相同的情况，咨询之，对方说他们改了脚本用Archive打包就搞定了，一语惊醒梦中人(谢谢柠檬同学)，对啊哥怎么没想到可以改用脚本Archive打包呢这样又可以规避一些Xcode的bug，于是把脚本中的.app打包方式改成Archive打包后就提交成功了。详细脚本请看上面</p>\n"},{"title":"iOS实现横竖屏遇到的一些坑和一些使用技巧","tages":["orientation","转屏","pop动画异常"],"_content":"项目中频繁的使用一些转屏，开发和维护过程中遇到很多坑，这里把转屏的基本流程和使用技巧分享一下。\n\n一、首先介绍一下转屏的基本流程。\n    1.设备硬件加速计检测到方向变化的时候会发出UIDeviceOrientationDidChangeNotification通知。\n    2.app收到通知会询问AppDelegate的window支持的方向情况与window的rootViewController或rootViewController.presentedViewController(如果存在)所支持的方向做交集，然后完成旋转。\n二、旋转控制函数有下面几个\n     - (BOOL)shouldAutorotate;// 将要自动旋转 返回 yes 为支持旋转，no 为不支持旋转  (这里有个坑，后面会讲)\n     - (UIInterfaceOrientationMask)supportedInterfaceOrientations;// 支持的界面方向\n     - (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation;// 首选方向，刚present进去时的方向\n\n三、下面是两个实践例子\n例子(1).先来一个简单的，一个只支持Portrait的界面A present 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B，并且首选方向是左\n这样很简单，在A中写两个函数\n\n```Objective-C\n- (BOOL)shouldAutorotate {\n    return NO;\n}\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations {\n    return UIInterfaceOrientationMaskPortrait;\n}\n```\n\n    在B中写三个函数就搞定了\n```Objective-C\n- (BOOL)shouldAutorotate {\n    return YES;\n}\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations {\n    return UIInterfaceOrientationMaskAllButUpsideDown;\n}\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation {\n    return UIInterfaceOrientationLandscapeLeft;\n}\n```\n    然后就可以直接看效果了\n[图片](presentB)\n    这时候你会发现在界面B旋转屏幕到非Portrait后dismiss会crash，因为dissmiss的时候window会询问A的方向，和当前window方向做交集，交集为空就crash了，解决办法很简单，在dismiss之前转回A页面支持的方向就可以了，代码如下\n```Objective-C\n- (instancetype)init {\n    self = [super init];\n    if (self) {\n        self.originDeviceOrientation = [UIDevice currentDevice].orientation;\n    }\n    return self;\n}\n- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^)(void))completion {\n    [[UIDevice currentDevice] setValue:@(self.originDeviceOrientation) forKey:@\"orientation\"];\n    [super dismissViewControllerAnimated:flag completion:completion];\n}\n```\n\n例子(2).再来一个常用的，一个只支持Portrait的界面A push 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B\n    要实现这个能力除了在A、B控制器里面分别实现上面写的函数外还需要转发转屏控制，因为window只询问到UINavigationController或UITabBarController，我们这里需要对UINavigationController的消息做转发，代码如下\n\n```Objective-C\n@interface UINavigationController(Autorotate)\n@end\n\n@implementation UINavigationController(Autorotate)\n\n- (BOOL)shouldAutorotate {\n    return self.viewControllers.lastObject.shouldAutorotate;\n}\n\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations {\n    return self.viewControllers.lastObject.supportedInterfaceOrientations;\n}\n\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation {\n    return self.viewControllers.lastObject.preferredInterfaceOrientationForPresentation;\n}\n\n@end\n```\n    但是这样会出现一个bug，如果B处于横屏状态pop，然后再次push到B在pop，动画就会异常。类似下面这样的异常动画\n    查了半天没找到原因，然后发现手Q没这个问题，于是查看手Q代码发现手Q里面没有实现shouldAutorotate这个函数，其实supportedInterfaceOrientations这一个函数就完全可以搞定屏幕方向了，不知道Apple的工程师为什么设计两个接口来控制屏幕方向。这里把shouldAutorotate函数干掉就没问题了。\n\n我们项目里面就有一个(2)这样的使用场景，前前后后遇踩了好多坑，总感觉这种使用方式有问题。最近思考了下，并把Apple本家的app都下载下来使用了下，没有看到(2)这种使用方式，而且系统API询问转屏只询问到UINavigationController说明Apple的API设计里面可能都没有考虑(2)这种使用场景。最后总结了下转屏的几个注意事项，欢迎大家批评指正。\n    1.全局都不用写shouldAutorotate，只写supportedInterfaceOrientations就够了。\n    2.不要像例子(2)里面一样去分发UINavigationController或UITabBarController的转屏控制函数，如果做了就要做好踩坑的准备，实在产品需求没办法可以考虑用present并定制一个跟push一样的transition动画。\n    3.支持不同方向的界面要像例子(1)这样用present，因为官方文档里面都是说的这样使用。\n","source":"_posts/iOS转屏的坑和一些使用技巧.md","raw":"---\ntitle: iOS实现横竖屏遇到的一些坑和一些使用技巧\ncategories: iOS\ntages: [orientation,转屏,pop动画异常]\n---\n项目中频繁的使用一些转屏，开发和维护过程中遇到很多坑，这里把转屏的基本流程和使用技巧分享一下。\n\n一、首先介绍一下转屏的基本流程。\n    1.设备硬件加速计检测到方向变化的时候会发出UIDeviceOrientationDidChangeNotification通知。\n    2.app收到通知会询问AppDelegate的window支持的方向情况与window的rootViewController或rootViewController.presentedViewController(如果存在)所支持的方向做交集，然后完成旋转。\n二、旋转控制函数有下面几个\n     - (BOOL)shouldAutorotate;// 将要自动旋转 返回 yes 为支持旋转，no 为不支持旋转  (这里有个坑，后面会讲)\n     - (UIInterfaceOrientationMask)supportedInterfaceOrientations;// 支持的界面方向\n     - (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation;// 首选方向，刚present进去时的方向\n\n三、下面是两个实践例子\n例子(1).先来一个简单的，一个只支持Portrait的界面A present 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B，并且首选方向是左\n这样很简单，在A中写两个函数\n\n```Objective-C\n- (BOOL)shouldAutorotate {\n    return NO;\n}\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations {\n    return UIInterfaceOrientationMaskPortrait;\n}\n```\n\n    在B中写三个函数就搞定了\n```Objective-C\n- (BOOL)shouldAutorotate {\n    return YES;\n}\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations {\n    return UIInterfaceOrientationMaskAllButUpsideDown;\n}\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation {\n    return UIInterfaceOrientationLandscapeLeft;\n}\n```\n    然后就可以直接看效果了\n[图片](presentB)\n    这时候你会发现在界面B旋转屏幕到非Portrait后dismiss会crash，因为dissmiss的时候window会询问A的方向，和当前window方向做交集，交集为空就crash了，解决办法很简单，在dismiss之前转回A页面支持的方向就可以了，代码如下\n```Objective-C\n- (instancetype)init {\n    self = [super init];\n    if (self) {\n        self.originDeviceOrientation = [UIDevice currentDevice].orientation;\n    }\n    return self;\n}\n- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^)(void))completion {\n    [[UIDevice currentDevice] setValue:@(self.originDeviceOrientation) forKey:@\"orientation\"];\n    [super dismissViewControllerAnimated:flag completion:completion];\n}\n```\n\n例子(2).再来一个常用的，一个只支持Portrait的界面A push 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B\n    要实现这个能力除了在A、B控制器里面分别实现上面写的函数外还需要转发转屏控制，因为window只询问到UINavigationController或UITabBarController，我们这里需要对UINavigationController的消息做转发，代码如下\n\n```Objective-C\n@interface UINavigationController(Autorotate)\n@end\n\n@implementation UINavigationController(Autorotate)\n\n- (BOOL)shouldAutorotate {\n    return self.viewControllers.lastObject.shouldAutorotate;\n}\n\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations {\n    return self.viewControllers.lastObject.supportedInterfaceOrientations;\n}\n\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation {\n    return self.viewControllers.lastObject.preferredInterfaceOrientationForPresentation;\n}\n\n@end\n```\n    但是这样会出现一个bug，如果B处于横屏状态pop，然后再次push到B在pop，动画就会异常。类似下面这样的异常动画\n    查了半天没找到原因，然后发现手Q没这个问题，于是查看手Q代码发现手Q里面没有实现shouldAutorotate这个函数，其实supportedInterfaceOrientations这一个函数就完全可以搞定屏幕方向了，不知道Apple的工程师为什么设计两个接口来控制屏幕方向。这里把shouldAutorotate函数干掉就没问题了。\n\n我们项目里面就有一个(2)这样的使用场景，前前后后遇踩了好多坑，总感觉这种使用方式有问题。最近思考了下，并把Apple本家的app都下载下来使用了下，没有看到(2)这种使用方式，而且系统API询问转屏只询问到UINavigationController说明Apple的API设计里面可能都没有考虑(2)这种使用场景。最后总结了下转屏的几个注意事项，欢迎大家批评指正。\n    1.全局都不用写shouldAutorotate，只写supportedInterfaceOrientations就够了。\n    2.不要像例子(2)里面一样去分发UINavigationController或UITabBarController的转屏控制函数，如果做了就要做好踩坑的准备，实在产品需求没办法可以考虑用present并定制一个跟push一样的transition动画。\n    3.支持不同方向的界面要像例子(1)这样用present，因为官方文档里面都是说的这样使用。\n","slug":"iOS转屏的坑和一些使用技巧","published":1,"date":"2017-03-03T09:12:33.000Z","updated":"2017-08-09T14:50:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbjgns1d00056hre53f5ygni","content":"<p>项目中频繁的使用一些转屏，开发和维护过程中遇到很多坑，这里把转屏的基本流程和使用技巧分享一下。</p>\n<p>一、首先介绍一下转屏的基本流程。<br>    1.设备硬件加速计检测到方向变化的时候会发出UIDeviceOrientationDidChangeNotification通知。<br>    2.app收到通知会询问AppDelegate的window支持的方向情况与window的rootViewController或rootViewController.presentedViewController(如果存在)所支持的方向做交集，然后完成旋转。<br>二、旋转控制函数有下面几个</p>\n<pre><code>- (BOOL)shouldAutorotate;// 将要自动旋转 返回 yes 为支持旋转，no 为不支持旋转  (这里有个坑，后面会讲)\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations;// 支持的界面方向\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation;// 首选方向，刚present进去时的方向\n</code></pre><p>三、下面是两个实践例子<br>例子(1).先来一个简单的，一个只支持Portrait的界面A present 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B，并且首选方向是左<br>这样很简单，在A中写两个函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)shouldAutorotate &#123;</div><div class=\"line\">    return NO;</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class=\"line\">    return UIInterfaceOrientationMaskPortrait;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>在B中写三个函数就搞定了\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)shouldAutorotate &#123;</div><div class=\"line\">    return YES;</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class=\"line\">    return UIInterfaceOrientationMaskAllButUpsideDown;</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation &#123;</div><div class=\"line\">    return UIInterfaceOrientationLandscapeLeft;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>然后就可以直接看效果了\n</code></pre><p><a href=\"presentB\">图片</a><br>    这时候你会发现在界面B旋转屏幕到非Portrait后dismiss会crash，因为dissmiss的时候window会询问A的方向，和当前window方向做交集，交集为空就crash了，解决办法很简单，在dismiss之前转回A页面支持的方向就可以了，代码如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (instancetype)init &#123;</div><div class=\"line\">    self = [super init];</div><div class=\"line\">    if (self) &#123;</div><div class=\"line\">        self.originDeviceOrientation = [UIDevice currentDevice].orientation;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return self;</div><div class=\"line\">&#125;</div><div class=\"line\">- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^)(void))completion &#123;</div><div class=\"line\">    [[UIDevice currentDevice] setValue:@(self.originDeviceOrientation) forKey:@&quot;orientation&quot;];</div><div class=\"line\">    [super dismissViewControllerAnimated:flag completion:completion];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>例子(2).再来一个常用的，一个只支持Portrait的界面A push 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B<br>    要实现这个能力除了在A、B控制器里面分别实现上面写的函数外还需要转发转屏控制，因为window只询问到UINavigationController或UITabBarController，我们这里需要对UINavigationController的消息做转发，代码如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">@interface UINavigationController(Autorotate)</div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">@implementation UINavigationController(Autorotate)</div><div class=\"line\"></div><div class=\"line\">- (BOOL)shouldAutorotate &#123;</div><div class=\"line\">    return self.viewControllers.lastObject.shouldAutorotate;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class=\"line\">    return self.viewControllers.lastObject.supportedInterfaceOrientations;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation &#123;</div><div class=\"line\">    return self.viewControllers.lastObject.preferredInterfaceOrientationForPresentation;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure>\n<pre><code>但是这样会出现一个bug，如果B处于横屏状态pop，然后再次push到B在pop，动画就会异常。类似下面这样的异常动画\n查了半天没找到原因，然后发现手Q没这个问题，于是查看手Q代码发现手Q里面没有实现shouldAutorotate这个函数，其实supportedInterfaceOrientations这一个函数就完全可以搞定屏幕方向了，不知道Apple的工程师为什么设计两个接口来控制屏幕方向。这里把shouldAutorotate函数干掉就没问题了。\n</code></pre><p>我们项目里面就有一个(2)这样的使用场景，前前后后遇踩了好多坑，总感觉这种使用方式有问题。最近思考了下，并把Apple本家的app都下载下来使用了下，没有看到(2)这种使用方式，而且系统API询问转屏只询问到UINavigationController说明Apple的API设计里面可能都没有考虑(2)这种使用场景。最后总结了下转屏的几个注意事项，欢迎大家批评指正。<br>    1.全局都不用写shouldAutorotate，只写supportedInterfaceOrientations就够了。<br>    2.不要像例子(2)里面一样去分发UINavigationController或UITabBarController的转屏控制函数，如果做了就要做好踩坑的准备，实在产品需求没办法可以考虑用present并定制一个跟push一样的transition动画。<br>    3.支持不同方向的界面要像例子(1)这样用present，因为官方文档里面都是说的这样使用。</p>\n","excerpt":"","more":"<p>项目中频繁的使用一些转屏，开发和维护过程中遇到很多坑，这里把转屏的基本流程和使用技巧分享一下。</p>\n<p>一、首先介绍一下转屏的基本流程。<br>    1.设备硬件加速计检测到方向变化的时候会发出UIDeviceOrientationDidChangeNotification通知。<br>    2.app收到通知会询问AppDelegate的window支持的方向情况与window的rootViewController或rootViewController.presentedViewController(如果存在)所支持的方向做交集，然后完成旋转。<br>二、旋转控制函数有下面几个</p>\n<pre><code>- (BOOL)shouldAutorotate;// 将要自动旋转 返回 yes 为支持旋转，no 为不支持旋转  (这里有个坑，后面会讲)\n- (UIInterfaceOrientationMask)supportedInterfaceOrientations;// 支持的界面方向\n- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation;// 首选方向，刚present进去时的方向\n</code></pre><p>三、下面是两个实践例子<br>例子(1).先来一个简单的，一个只支持Portrait的界面A present 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B，并且首选方向是左<br>这样很简单，在A中写两个函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)shouldAutorotate &#123;</div><div class=\"line\">    return NO;</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class=\"line\">    return UIInterfaceOrientationMaskPortrait;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>在B中写三个函数就搞定了\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (BOOL)shouldAutorotate &#123;</div><div class=\"line\">    return YES;</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class=\"line\">    return UIInterfaceOrientationMaskAllButUpsideDown;</div><div class=\"line\">&#125;</div><div class=\"line\">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation &#123;</div><div class=\"line\">    return UIInterfaceOrientationLandscapeLeft;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>然后就可以直接看效果了\n</code></pre><p><a href=\"presentB\">图片</a><br>    这时候你会发现在界面B旋转屏幕到非Portrait后dismiss会crash，因为dissmiss的时候window会询问A的方向，和当前window方向做交集，交集为空就crash了，解决办法很简单，在dismiss之前转回A页面支持的方向就可以了，代码如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (instancetype)init &#123;</div><div class=\"line\">    self = [super init];</div><div class=\"line\">    if (self) &#123;</div><div class=\"line\">        self.originDeviceOrientation = [UIDevice currentDevice].orientation;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return self;</div><div class=\"line\">&#125;</div><div class=\"line\">- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^)(void))completion &#123;</div><div class=\"line\">    [[UIDevice currentDevice] setValue:@(self.originDeviceOrientation) forKey:@&quot;orientation&quot;];</div><div class=\"line\">    [super dismissViewControllerAnimated:flag completion:completion];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>例子(2).再来一个常用的，一个只支持Portrait的界面A push 一个支持三个方向(UIInterfaceOrientationMaskAllButUpsideDown)的界面B<br>    要实现这个能力除了在A、B控制器里面分别实现上面写的函数外还需要转发转屏控制，因为window只询问到UINavigationController或UITabBarController，我们这里需要对UINavigationController的消息做转发，代码如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">@interface UINavigationController(Autorotate)</div><div class=\"line\">@end</div><div class=\"line\"></div><div class=\"line\">@implementation UINavigationController(Autorotate)</div><div class=\"line\"></div><div class=\"line\">- (BOOL)shouldAutorotate &#123;</div><div class=\"line\">    return self.viewControllers.lastObject.shouldAutorotate;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123;</div><div class=\"line\">    return self.viewControllers.lastObject.supportedInterfaceOrientations;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation &#123;</div><div class=\"line\">    return self.viewControllers.lastObject.preferredInterfaceOrientationForPresentation;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure>\n<pre><code>但是这样会出现一个bug，如果B处于横屏状态pop，然后再次push到B在pop，动画就会异常。类似下面这样的异常动画\n查了半天没找到原因，然后发现手Q没这个问题，于是查看手Q代码发现手Q里面没有实现shouldAutorotate这个函数，其实supportedInterfaceOrientations这一个函数就完全可以搞定屏幕方向了，不知道Apple的工程师为什么设计两个接口来控制屏幕方向。这里把shouldAutorotate函数干掉就没问题了。\n</code></pre><p>我们项目里面就有一个(2)这样的使用场景，前前后后遇踩了好多坑，总感觉这种使用方式有问题。最近思考了下，并把Apple本家的app都下载下来使用了下，没有看到(2)这种使用方式，而且系统API询问转屏只询问到UINavigationController说明Apple的API设计里面可能都没有考虑(2)这种使用场景。最后总结了下转屏的几个注意事项，欢迎大家批评指正。<br>    1.全局都不用写shouldAutorotate，只写supportedInterfaceOrientations就够了。<br>    2.不要像例子(2)里面一样去分发UINavigationController或UITabBarController的转屏控制函数，如果做了就要做好踩坑的准备，实在产品需求没办法可以考虑用present并定制一个跟push一样的transition动画。<br>    3.支持不同方向的界面要像例子(1)这样用present，因为官方文档里面都是说的这样使用。</p>\n"},{"title":"笔记和开发技巧 一","date":"2017-06-06T03:00:08.000Z","_content":"#备忘\n1.Xcode8上真机编译的包如果有使用付费证书那么就可以一直使用；如果使用的免费AppleID生成的证书那么就最多用3天(从编包那天算起)，三天后打开就自动crash\n","source":"_posts/笔记和开发技巧-一.md","raw":"---\ntitle: 笔记和开发技巧 一\ndate: 2017-06-06 11:00:08\ncategories:\ntags:\n---\n#备忘\n1.Xcode8上真机编译的包如果有使用付费证书那么就可以一直使用；如果使用的免费AppleID生成的证书那么就最多用3天(从编包那天算起)，三天后打开就自动crash\n","slug":"笔记和开发技巧-一","published":1,"updated":"2017-06-06T03:00:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbjgns1d00066hreb0l744ti","content":"<p>#备忘<br>1.Xcode8上真机编译的包如果有使用付费证书那么就可以一直使用；如果使用的免费AppleID生成的证书那么就最多用3天(从编包那天算起)，三天后打开就自动crash</p>\n","excerpt":"","more":"<p>#备忘<br>1.Xcode8上真机编译的包如果有使用付费证书那么就可以一直使用；如果使用的免费AppleID生成的证书那么就最多用3天(从编包那天算起)，三天后打开就自动crash</p>\n"},{"title":"一种强大的布局方案","tages":["iOS","Xcode","UICollectionView","WYWaterFlowLayout","Layout"],"_content":"\n做项目的时候遇到一些界面需要的布局非常自由而网上搜了一些开源的代码都没找到一个理想的，于是自己就准备写一种比较理想的布局，一种可以像系统的UICollectionViewFlowLayout一样从左到右的流式布局，又能像CHTCollectionViewWaterfallLayout一样的从上到下瀑布流布局，并且完全能兼容这两种布局的能力，想到就做(就算不能一步到位也可以慢慢实现直到解决问题)。\n\n这里首先来看一下UICollectionViewFlowLayout的一种布局情况    \n<img src=\"UICollectionViewFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"UICollectionViewFlowLayout.gif\"/>    \n可以看到这么多空白位置多浪费啊，这也是我想写一个布局的原因之一(浪费可耻啊)\n\n然后在看一个网上写的比较好的布局CHTCollectionViewWaterfallLayout显示情况    \n<img src=\"CHTCollectionViewWaterfallLayout.gif\" width=\"300\" height=\"514\" alt=\"CHTCollectionViewWaterfallLayout.gif\"/>    \n虽然不浪费空间了，但是有一个致命的问题(宽度都是一样的)，对于一个追求完美的程序员来所这完全是无法容忍的(作者不要打我。我这里只是说不够理想，并不是说这个布局不够好，这个布局是我在GitHub上见过写得最好的了)...    \n\n下面看一个理想中的布局    \n<img src=\"WYWaterFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"WYWaterFlowLayout.gif\"/>    \n为了这个理想布局我开始了撸代码。    \n\n这里首先打下草稿定下几点实现思路(这里就不讲layout定制的基础教程了，[网上一大片](http://www.jianshu.com/p/a2b2e2af9907))    \n1.布局方向采用从上到下从左到右(就类似下的雨留到河流里面的继续往海里流一样)    \n2.所有复杂页面的布局都能通过业务层给出适当的size实现    \n3.完全可以像系统的UICollectionViewFlowLayout一样使用，这里接口几乎跟系统API一毛一样    \n4.理想状态是性能要高    \n\n\n最开始一直没想到一个好的办法计算这种从上到下从左到右的布局，直到有一天撸代码的时候使用到了NSIndexSet，突然灵光一闪想到了这个NSIndexSet完全可以解决这种理想的layout的布局计算。于是在我撸啊撸的情况下总算撸出来了一个[初版](初版.zip)。为什么叫初版呢? 是因为虽然功能是实现了，但是细节和性能还有待提升！这需要后续持续完善。    \n\n下面给出初版的性能测试对比（测试设备:iPhone6，数据量:10万）    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用(1条数据的时候4.9MB)    \n------------                          |   ---               |   -----------                              |    ----------                  \nUICollectionViewFlowLayout            |   258.518 ms        |   1.100 ms                                 |    20.9 MB\nCHTCollectionViewWaterfallLayout      |   864.026 ms        |   1.613 ms                                 |    35.6 MB\nWYWaterFlowLayout                     |   2292.417 ms       |   2.088 ms                                 |    51.6 MB\n\n当然10万数据有点大  这里给个1万数据的测试    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用    \n------------                          |   ---               |   -----------                              |    ----------                \nUICollectionViewFlowLayout            |   25.087 ms         |   0.614 ms                                 |    6.7 MB\nCHTCollectionViewWaterfallLayout      |   80.257 ms         |   0.271 ms                                 |    8.8 MB\nWYWaterFlowLayout                     |   160.849 ms        |   0.209 ms                                 |    10.3 MB\n\n&emsp;看这个测试数据勉强还能接受，除了布局时间长一点，滑动性能还可以，基本算可以使用了。但是对于一个励志要改变世界的程序员来说必须得追求极限，这里跟CHTCollectionViewWaterfallLayout对比性能相差了将近一倍，性能瓶颈主要在下面这个函数，因为10万数据的测试1645.468ms里面有1200ms都是这个函数消耗的,通过优化这个函数可以大幅度提升性能。    \n```Objective-C     \n- (CGRect)willAddItemWithSize:(CGSize)size maxWidth:(CGFloat)maxWidth maxTop:(CGFloat *)p_top withSpaces:(NSMutableArray<WYSpaceIndexSet *> *)emptySpaces\n```    \n\n这个函数主要是传入一个需要布局的item的size、布局所在的宽度和空白位置记录数据，返回这个item的frame和当前布局到的最大y坐标，这个函数也是这个布局最核心的函数了，函数主要是做了三件事    \n1.根据已有空位记录找到要插入的item可以放的位置    \n2.更新空白位置记录，比插入item低的空位被它占用，比插入item高的会占用当前的空位    \n3.把空位记录按低到高左到右排序    \n    \n生活中一切目标都能通过解决N个问题实现  ----  刚想出来的。\n这里争取只遍历一遍就完成查找排序更新，想到就做。首先这里通过优化排序算法，把2292.417ms的运算时间降低到了1220.73ms；然后通过简化数据结构把运算时间降低到1000ms左右，勉强可用了。\n\n下面附上简化后的性能测试数据（测试设备:iPhone6，数据量:10万）    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用(1条数据的时候4.9MB)    \n------------                          |   ---               |   -----------                              |    ----------                  \nUICollectionViewFlowLayout            |   258.518 ms        |   1.100 ms                                 |    20.9 MB\nCHTCollectionViewWaterfallLayout      |   864.026 ms        |   1.613 ms                                 |    35.6 MB\nWYWaterFlowLayout                     |   1076.112 ms       |   1.776 ms                                 |    50.4 MB\n\n当然10万数据有点大  这里给个1万数据的测试    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用    \n------------                          |   ---               |   -----------                              |    ----------                \nUICollectionViewFlowLayout            |   25.087 ms         |   0.614 ms                                 |    6.7 MB\nCHTCollectionViewWaterfallLayout      |   80.257 ms         |   0.271 ms                                 |    8.8 MB\nWYWaterFlowLayout                     |   98.604 ms         |   0.246 ms                                 |    10.4 MB\n\n这里跟CHTCollectionViewWaterfallLayout的性能已经很接近了，在复杂度提高的情况下能把性能控制得差不多这里也算基本满意了。\n后续可以继续优化这里的计算，以及像素点对齐。\n\nLicense\n-------\nWYWaterFlowLayout is available under the MIT license. See the LICENSE file for more info.\n","source":"_posts/一种强大的布局方案.md","raw":"---\ntitle: 一种强大的布局方案\ncategories: iOS\ntages: [iOS,Xcode,UICollectionView,WYWaterFlowLayout,Layout]\n---\n\n做项目的时候遇到一些界面需要的布局非常自由而网上搜了一些开源的代码都没找到一个理想的，于是自己就准备写一种比较理想的布局，一种可以像系统的UICollectionViewFlowLayout一样从左到右的流式布局，又能像CHTCollectionViewWaterfallLayout一样的从上到下瀑布流布局，并且完全能兼容这两种布局的能力，想到就做(就算不能一步到位也可以慢慢实现直到解决问题)。\n\n这里首先来看一下UICollectionViewFlowLayout的一种布局情况    \n<img src=\"UICollectionViewFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"UICollectionViewFlowLayout.gif\"/>    \n可以看到这么多空白位置多浪费啊，这也是我想写一个布局的原因之一(浪费可耻啊)\n\n然后在看一个网上写的比较好的布局CHTCollectionViewWaterfallLayout显示情况    \n<img src=\"CHTCollectionViewWaterfallLayout.gif\" width=\"300\" height=\"514\" alt=\"CHTCollectionViewWaterfallLayout.gif\"/>    \n虽然不浪费空间了，但是有一个致命的问题(宽度都是一样的)，对于一个追求完美的程序员来所这完全是无法容忍的(作者不要打我。我这里只是说不够理想，并不是说这个布局不够好，这个布局是我在GitHub上见过写得最好的了)...    \n\n下面看一个理想中的布局    \n<img src=\"WYWaterFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"WYWaterFlowLayout.gif\"/>    \n为了这个理想布局我开始了撸代码。    \n\n这里首先打下草稿定下几点实现思路(这里就不讲layout定制的基础教程了，[网上一大片](http://www.jianshu.com/p/a2b2e2af9907))    \n1.布局方向采用从上到下从左到右(就类似下的雨留到河流里面的继续往海里流一样)    \n2.所有复杂页面的布局都能通过业务层给出适当的size实现    \n3.完全可以像系统的UICollectionViewFlowLayout一样使用，这里接口几乎跟系统API一毛一样    \n4.理想状态是性能要高    \n\n\n最开始一直没想到一个好的办法计算这种从上到下从左到右的布局，直到有一天撸代码的时候使用到了NSIndexSet，突然灵光一闪想到了这个NSIndexSet完全可以解决这种理想的layout的布局计算。于是在我撸啊撸的情况下总算撸出来了一个[初版](初版.zip)。为什么叫初版呢? 是因为虽然功能是实现了，但是细节和性能还有待提升！这需要后续持续完善。    \n\n下面给出初版的性能测试对比（测试设备:iPhone6，数据量:10万）    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用(1条数据的时候4.9MB)    \n------------                          |   ---               |   -----------                              |    ----------                  \nUICollectionViewFlowLayout            |   258.518 ms        |   1.100 ms                                 |    20.9 MB\nCHTCollectionViewWaterfallLayout      |   864.026 ms        |   1.613 ms                                 |    35.6 MB\nWYWaterFlowLayout                     |   2292.417 ms       |   2.088 ms                                 |    51.6 MB\n\n当然10万数据有点大  这里给个1万数据的测试    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用    \n------------                          |   ---               |   -----------                              |    ----------                \nUICollectionViewFlowLayout            |   25.087 ms         |   0.614 ms                                 |    6.7 MB\nCHTCollectionViewWaterfallLayout      |   80.257 ms         |   0.271 ms                                 |    8.8 MB\nWYWaterFlowLayout                     |   160.849 ms        |   0.209 ms                                 |    10.3 MB\n\n&emsp;看这个测试数据勉强还能接受，除了布局时间长一点，滑动性能还可以，基本算可以使用了。但是对于一个励志要改变世界的程序员来说必须得追求极限，这里跟CHTCollectionViewWaterfallLayout对比性能相差了将近一倍，性能瓶颈主要在下面这个函数，因为10万数据的测试1645.468ms里面有1200ms都是这个函数消耗的,通过优化这个函数可以大幅度提升性能。    \n```Objective-C     \n- (CGRect)willAddItemWithSize:(CGSize)size maxWidth:(CGFloat)maxWidth maxTop:(CGFloat *)p_top withSpaces:(NSMutableArray<WYSpaceIndexSet *> *)emptySpaces\n```    \n\n这个函数主要是传入一个需要布局的item的size、布局所在的宽度和空白位置记录数据，返回这个item的frame和当前布局到的最大y坐标，这个函数也是这个布局最核心的函数了，函数主要是做了三件事    \n1.根据已有空位记录找到要插入的item可以放的位置    \n2.更新空白位置记录，比插入item低的空位被它占用，比插入item高的会占用当前的空位    \n3.把空位记录按低到高左到右排序    \n    \n生活中一切目标都能通过解决N个问题实现  ----  刚想出来的。\n这里争取只遍历一遍就完成查找排序更新，想到就做。首先这里通过优化排序算法，把2292.417ms的运算时间降低到了1220.73ms；然后通过简化数据结构把运算时间降低到1000ms左右，勉强可用了。\n\n下面附上简化后的性能测试数据（测试设备:iPhone6，数据量:10万）    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用(1条数据的时候4.9MB)    \n------------                          |   ---               |   -----------                              |    ----------                  \nUICollectionViewFlowLayout            |   258.518 ms        |   1.100 ms                                 |    20.9 MB\nCHTCollectionViewWaterfallLayout      |   864.026 ms        |   1.613 ms                                 |    35.6 MB\nWYWaterFlowLayout                     |   1076.112 ms       |   1.776 ms                                 |    50.4 MB\n\n当然10万数据有点大  这里给个1万数据的测试    \n\nfunction                              |   preparLayout      |   layoutAttributesForElementsInRect        |    内存使用    \n------------                          |   ---               |   -----------                              |    ----------                \nUICollectionViewFlowLayout            |   25.087 ms         |   0.614 ms                                 |    6.7 MB\nCHTCollectionViewWaterfallLayout      |   80.257 ms         |   0.271 ms                                 |    8.8 MB\nWYWaterFlowLayout                     |   98.604 ms         |   0.246 ms                                 |    10.4 MB\n\n这里跟CHTCollectionViewWaterfallLayout的性能已经很接近了，在复杂度提高的情况下能把性能控制得差不多这里也算基本满意了。\n后续可以继续优化这里的计算，以及像素点对齐。\n\nLicense\n-------\nWYWaterFlowLayout is available under the MIT license. See the LICENSE file for more info.\n","slug":"一种强大的布局方案","published":1,"date":"2017-05-16T08:10:41.000Z","updated":"2017-12-23T14:47:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbjgns1g00086hreqhcvtojv","content":"<p>做项目的时候遇到一些界面需要的布局非常自由而网上搜了一些开源的代码都没找到一个理想的，于是自己就准备写一种比较理想的布局，一种可以像系统的UICollectionViewFlowLayout一样从左到右的流式布局，又能像CHTCollectionViewWaterfallLayout一样的从上到下瀑布流布局，并且完全能兼容这两种布局的能力，想到就做(就算不能一步到位也可以慢慢实现直到解决问题)。</p>\n<p>这里首先来看一下UICollectionViewFlowLayout的一种布局情况<br><img src=\"UICollectionViewFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"UICollectionViewFlowLayout.gif\"><br>可以看到这么多空白位置多浪费啊，这也是我想写一个布局的原因之一(浪费可耻啊)</p>\n<p>然后在看一个网上写的比较好的布局CHTCollectionViewWaterfallLayout显示情况<br><img src=\"CHTCollectionViewWaterfallLayout.gif\" width=\"300\" height=\"514\" alt=\"CHTCollectionViewWaterfallLayout.gif\"><br>虽然不浪费空间了，但是有一个致命的问题(宽度都是一样的)，对于一个追求完美的程序员来所这完全是无法容忍的(作者不要打我。我这里只是说不够理想，并不是说这个布局不够好，这个布局是我在GitHub上见过写得最好的了)…    </p>\n<p>下面看一个理想中的布局<br><img src=\"WYWaterFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"WYWaterFlowLayout.gif\"><br>为了这个理想布局我开始了撸代码。    </p>\n<p>这里首先打下草稿定下几点实现思路(这里就不讲layout定制的基础教程了，<a href=\"http://www.jianshu.com/p/a2b2e2af9907\" target=\"_blank\" rel=\"external\">网上一大片</a>)<br>1.布局方向采用从上到下从左到右(就类似下的雨留到河流里面的继续往海里流一样)<br>2.所有复杂页面的布局都能通过业务层给出适当的size实现<br>3.完全可以像系统的UICollectionViewFlowLayout一样使用，这里接口几乎跟系统API一毛一样<br>4.理想状态是性能要高    </p>\n<p>最开始一直没想到一个好的办法计算这种从上到下从左到右的布局，直到有一天撸代码的时候使用到了NSIndexSet，突然灵光一闪想到了这个NSIndexSet完全可以解决这种理想的layout的布局计算。于是在我撸啊撸的情况下总算撸出来了一个<a href=\"初版.zip\">初版</a>。为什么叫初版呢? 是因为虽然功能是实现了，但是细节和性能还有待提升！这需要后续持续完善。    </p>\n<p>下面给出初版的性能测试对比（测试设备:iPhone6，数据量:10万）    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用(1条数据的时候4.9MB)    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>258.518 ms</td>\n<td>1.100 ms</td>\n<td>20.9 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>864.026 ms</td>\n<td>1.613 ms</td>\n<td>35.6 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>2292.417 ms</td>\n<td>2.088 ms</td>\n<td>51.6 MB</td>\n</tr>\n</tbody>\n</table>\n<p>当然10万数据有点大  这里给个1万数据的测试    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>25.087 ms</td>\n<td>0.614 ms</td>\n<td>6.7 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>80.257 ms</td>\n<td>0.271 ms</td>\n<td>8.8 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>160.849 ms</td>\n<td>0.209 ms</td>\n<td>10.3 MB</td>\n</tr>\n</tbody>\n</table>\n<p>&emsp;看这个测试数据勉强还能接受，除了布局时间长一点，滑动性能还可以，基本算可以使用了。但是对于一个励志要改变世界的程序员来说必须得追求极限，这里跟CHTCollectionViewWaterfallLayout对比性能相差了将近一倍，性能瓶颈主要在下面这个函数，因为10万数据的测试1645.468ms里面有1200ms都是这个函数消耗的,通过优化这个函数可以大幅度提升性能。    </p>\n<pre><code class=\"Objective-C\">- (CGRect)willAddItemWithSize:(CGSize)size maxWidth:(CGFloat)maxWidth maxTop:(CGFloat *)p_top withSpaces:(NSMutableArray&lt;WYSpaceIndexSet *&gt; *)emptySpaces\n</code></pre>\n<p>这个函数主要是传入一个需要布局的item的size、布局所在的宽度和空白位置记录数据，返回这个item的frame和当前布局到的最大y坐标，这个函数也是这个布局最核心的函数了，函数主要是做了三件事<br>1.根据已有空位记录找到要插入的item可以放的位置<br>2.更新空白位置记录，比插入item低的空位被它占用，比插入item高的会占用当前的空位<br>3.把空位记录按低到高左到右排序    </p>\n<p>生活中一切目标都能通过解决N个问题实现  —-  刚想出来的。<br>这里争取只遍历一遍就完成查找排序更新，想到就做。首先这里通过优化排序算法，把2292.417ms的运算时间降低到了1220.73ms；然后通过简化数据结构把运算时间降低到1000ms左右，勉强可用了。</p>\n<p>下面附上简化后的性能测试数据（测试设备:iPhone6，数据量:10万）    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用(1条数据的时候4.9MB)    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>258.518 ms</td>\n<td>1.100 ms</td>\n<td>20.9 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>864.026 ms</td>\n<td>1.613 ms</td>\n<td>35.6 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>1076.112 ms</td>\n<td>1.776 ms</td>\n<td>50.4 MB</td>\n</tr>\n</tbody>\n</table>\n<p>当然10万数据有点大  这里给个1万数据的测试    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>25.087 ms</td>\n<td>0.614 ms</td>\n<td>6.7 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>80.257 ms</td>\n<td>0.271 ms</td>\n<td>8.8 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>98.604 ms</td>\n<td>0.246 ms</td>\n<td>10.4 MB</td>\n</tr>\n</tbody>\n</table>\n<p>这里跟CHTCollectionViewWaterfallLayout的性能已经很接近了，在复杂度提高的情况下能把性能控制得差不多这里也算基本满意了。<br>后续可以继续优化这里的计算，以及像素点对齐。</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>WYWaterFlowLayout is available under the MIT license. See the LICENSE file for more info.</p>\n","excerpt":"","more":"<p>做项目的时候遇到一些界面需要的布局非常自由而网上搜了一些开源的代码都没找到一个理想的，于是自己就准备写一种比较理想的布局，一种可以像系统的UICollectionViewFlowLayout一样从左到右的流式布局，又能像CHTCollectionViewWaterfallLayout一样的从上到下瀑布流布局，并且完全能兼容这两种布局的能力，想到就做(就算不能一步到位也可以慢慢实现直到解决问题)。</p>\n<p>这里首先来看一下UICollectionViewFlowLayout的一种布局情况<br><img src=\"UICollectionViewFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"UICollectionViewFlowLayout.gif\"/><br>可以看到这么多空白位置多浪费啊，这也是我想写一个布局的原因之一(浪费可耻啊)</p>\n<p>然后在看一个网上写的比较好的布局CHTCollectionViewWaterfallLayout显示情况<br><img src=\"CHTCollectionViewWaterfallLayout.gif\" width=\"300\" height=\"514\" alt=\"CHTCollectionViewWaterfallLayout.gif\"/><br>虽然不浪费空间了，但是有一个致命的问题(宽度都是一样的)，对于一个追求完美的程序员来所这完全是无法容忍的(作者不要打我。我这里只是说不够理想，并不是说这个布局不够好，这个布局是我在GitHub上见过写得最好的了)…    </p>\n<p>下面看一个理想中的布局<br><img src=\"WYWaterFlowLayout.gif\" width=\"300\" height=\"514\" alt=\"WYWaterFlowLayout.gif\"/><br>为了这个理想布局我开始了撸代码。    </p>\n<p>这里首先打下草稿定下几点实现思路(这里就不讲layout定制的基础教程了，<a href=\"http://www.jianshu.com/p/a2b2e2af9907\">网上一大片</a>)<br>1.布局方向采用从上到下从左到右(就类似下的雨留到河流里面的继续往海里流一样)<br>2.所有复杂页面的布局都能通过业务层给出适当的size实现<br>3.完全可以像系统的UICollectionViewFlowLayout一样使用，这里接口几乎跟系统API一毛一样<br>4.理想状态是性能要高    </p>\n<p>最开始一直没想到一个好的办法计算这种从上到下从左到右的布局，直到有一天撸代码的时候使用到了NSIndexSet，突然灵光一闪想到了这个NSIndexSet完全可以解决这种理想的layout的布局计算。于是在我撸啊撸的情况下总算撸出来了一个<a href=\"初版.zip\">初版</a>。为什么叫初版呢? 是因为虽然功能是实现了，但是细节和性能还有待提升！这需要后续持续完善。    </p>\n<p>下面给出初版的性能测试对比（测试设备:iPhone6，数据量:10万）    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用(1条数据的时候4.9MB)    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>258.518 ms</td>\n<td>1.100 ms</td>\n<td>20.9 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>864.026 ms</td>\n<td>1.613 ms</td>\n<td>35.6 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>2292.417 ms</td>\n<td>2.088 ms</td>\n<td>51.6 MB</td>\n</tr>\n</tbody>\n</table>\n<p>当然10万数据有点大  这里给个1万数据的测试    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>25.087 ms</td>\n<td>0.614 ms</td>\n<td>6.7 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>80.257 ms</td>\n<td>0.271 ms</td>\n<td>8.8 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>160.849 ms</td>\n<td>0.209 ms</td>\n<td>10.3 MB</td>\n</tr>\n</tbody>\n</table>\n<p>&emsp;看这个测试数据勉强还能接受，除了布局时间长一点，滑动性能还可以，基本算可以使用了。但是对于一个励志要改变世界的程序员来说必须得追求极限，这里跟CHTCollectionViewWaterfallLayout对比性能相差了将近一倍，性能瓶颈主要在下面这个函数，因为10万数据的测试1645.468ms里面有1200ms都是这个函数消耗的,通过优化这个函数可以大幅度提升性能。    </p>\n<pre><code class=\"Objective-C\">- (CGRect)willAddItemWithSize:(CGSize)size maxWidth:(CGFloat)maxWidth maxTop:(CGFloat *)p_top withSpaces:(NSMutableArray&lt;WYSpaceIndexSet *&gt; *)emptySpaces\n</code></pre>\n<p>这个函数主要是传入一个需要布局的item的size、布局所在的宽度和空白位置记录数据，返回这个item的frame和当前布局到的最大y坐标，这个函数也是这个布局最核心的函数了，函数主要是做了三件事<br>1.根据已有空位记录找到要插入的item可以放的位置<br>2.更新空白位置记录，比插入item低的空位被它占用，比插入item高的会占用当前的空位<br>3.把空位记录按低到高左到右排序    </p>\n<p>生活中一切目标都能通过解决N个问题实现  —-  刚想出来的。<br>这里争取只遍历一遍就完成查找排序更新，想到就做。首先这里通过优化排序算法，把2292.417ms的运算时间降低到了1220.73ms；然后通过简化数据结构把运算时间降低到1000ms左右，勉强可用了。</p>\n<p>下面附上简化后的性能测试数据（测试设备:iPhone6，数据量:10万）    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用(1条数据的时候4.9MB)    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>258.518 ms</td>\n<td>1.100 ms</td>\n<td>20.9 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>864.026 ms</td>\n<td>1.613 ms</td>\n<td>35.6 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>1076.112 ms</td>\n<td>1.776 ms</td>\n<td>50.4 MB</td>\n</tr>\n</tbody>\n</table>\n<p>当然10万数据有点大  这里给个1万数据的测试    </p>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>preparLayout</th>\n<th>layoutAttributesForElementsInRect</th>\n<th>内存使用    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>UICollectionViewFlowLayout</td>\n<td>25.087 ms</td>\n<td>0.614 ms</td>\n<td>6.7 MB</td>\n</tr>\n<tr>\n<td>CHTCollectionViewWaterfallLayout</td>\n<td>80.257 ms</td>\n<td>0.271 ms</td>\n<td>8.8 MB</td>\n</tr>\n<tr>\n<td>WYWaterFlowLayout</td>\n<td>98.604 ms</td>\n<td>0.246 ms</td>\n<td>10.4 MB</td>\n</tr>\n</tbody>\n</table>\n<p>这里跟CHTCollectionViewWaterfallLayout的性能已经很接近了，在复杂度提高的情况下能把性能控制得差不多这里也算基本满意了。<br>后续可以继续优化这里的计算，以及像素点对齐。</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>WYWaterFlowLayout is available under the MIT license. See the LICENSE file for more info.</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjbjgns1d00056hre53f5ygni","category_id":"cjbjgns1900036hreotayva8d","_id":"cjbjgns1i00096hreqgpelaby"},{"post_id":"cjbjgns1200006hre1s3uhc8f","category_id":"cjbjgns1900036hreotayva8d","_id":"cjbjgns1j000b6hrez5g4in4x"},{"post_id":"cjbjgns1g00086hreqhcvtojv","category_id":"cjbjgns1900036hreotayva8d","_id":"cjbjgns1k000c6hre5gmbak7j"},{"post_id":"cjbjgns1600026hredz9syva0","category_id":"cjbjgns1900036hreotayva8d","_id":"cjbjgns1k000d6hreqmmqmoou"},{"post_id":"cjbjgns1b00046hremnu9jqvd","category_id":"cjbjgns1900036hreotayva8d","_id":"cjbjgns1k000e6hrevsk6qza1"}],"PostTag":[],"Tag":[]}}